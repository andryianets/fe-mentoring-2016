{"version":3,"sources":["../../src/js/news.js"],"names":["NewsAPI","ARTICLES_API_URL","SOURCES_API_URL","Client","apiKey","params","doRequest","baseUrl","queryParts","name","push","urlSuffix","join","url","fetch","getApiUrl","then","response","ok","Error","statusText","json"],"mappings":";;;;;;AAAA,IAAMA,UAAW,YAAM;;AAEnB,QAAMC,mBAAmB,iCAAzB;AACA,QAAMC,kBAAkB,gCAAxB;;AAHmB,QAKbC,MALa;AAOf,wBAAYC,MAAZ,EAAoB;AAAA;;AAChB,iBAAKA,MAAL,GAAcA,MAAd;AACH;;AATc;AAAA;AAAA,uCAgCJC,MAhCI,EAgCI;AACf,uBAAO,KAAKC,SAAL,CAAeJ,eAAf,EAAgCG,MAAhC,CAAP;AACH;AAlCc;AAAA;AAAA,0CAoCU;AAAA,oBAAbA,MAAa,uEAAJ,EAAI;;AACrB,uBAAO,KAAKC,SAAL,CAAeL,gBAAf,EAAiCI,MAAjC,CAAP;AACH;AAtCc;AAAA;AAAA,sCAwCLE,OAxCK,EAwCiB;AAAA,oBAAbF,MAAa,uEAAJ,EAAI;;AAC5B,oBAAMG,aAAa,EAAnB;AACA,qBAAK,IAAIC,IAAT,IAAiBJ,MAAjB,EAAyB;AACrB,wBAAIA,OAAOI,IAAP,CAAJ,EAAkB;AACdD,mCAAWE,IAAX,CAAmBD,IAAnB,SAA2BJ,OAAOI,IAAP,CAA3B;AACH;AACJ;AACD,oBAAME,YAAYH,WAAWI,IAAX,CAAgB,GAAhB,CAAlB;AACA,uBAAUL,OAAV,SAAqBI,SAArB;AACH;AAjDc;AAAA;AAAA,sCAmDLE,GAnDK,EAmDa;AAAA,oBAAbR,MAAa,uEAAJ,EAAI;;AACxBA,uBAAOD,MAAP,GAAgB,KAAKA,MAArB;AACA,uBAAOU,MAAM,KAAKC,SAAL,CAAeF,GAAf,EAAoBR,MAApB,CAAN,EACFW,IADE,CACG,oBAAY;AACd,wBAAI,CAACC,SAASC,EAAd,EAAkB;AACd,8BAAMC,MAAMF,SAASG,UAAf,CAAN;AACH;AACD,2BAAOH,SAASI,IAAT,EAAP;AACH,iBANE,CAAP;AAOH;AA5Dc;AAAA;AAAA,gCAWkB;AAC7B,uBAAO,CACH,UADG,EAEH,eAFG,EAGH,QAHG,EAIH,SAJG,EAKH,OALG,EAMH,oBANG,EAOH,OAPG,EAQH,YARG,CAAP;AAUH;AAtBc;AAAA;AAAA,gCAwBiB;AAC5B,uBAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAP;AACH;AA1Bc;AAAA;AAAA,gCA4BiB;AAC5B,uBAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CAAP;AACH;AA9Bc;;AAAA;AAAA;;AAgEnB,WAAO;AACHlB;AADG,KAAP;AAIH,CApEe,EAAhB","file":"news.js","sourcesContent":["const NewsAPI = (() => {\r\n\r\n    const ARTICLES_API_URL = 'https://newsapi.org/v1/articles';\r\n    const SOURCES_API_URL = 'https://newsapi.org/v1/sources';\r\n\r\n    class Client {\r\n\r\n        constructor(apiKey) {\r\n            this.apiKey = apiKey;\r\n        }\r\n\r\n        static get availableCategories() {\r\n            return [\r\n                'business',\r\n                'entertainment',\r\n                'gaming',\r\n                'general',\r\n                'music',\r\n                'science-and-nature',\r\n                'sport',\r\n                'technology'\r\n            ];\r\n        }\r\n\r\n        static get availableLanguages() {\r\n            return ['en', 'de', 'fr'];\r\n        }\r\n\r\n        static get availableCountries() {\r\n            return ['au', 'de', 'gb', 'in', 'it', 'us'];\r\n        }\r\n\r\n        getSources(params) {\r\n            return this.doRequest(SOURCES_API_URL, params);\r\n        }\r\n\r\n        getArticles(params = {}) {\r\n            return this.doRequest(ARTICLES_API_URL, params);\r\n        }\r\n\r\n        getApiUrl(baseUrl, params = {}) {\r\n            const queryParts = [];\r\n            for (var name in params) {\r\n                if (params[name]) {\r\n                    queryParts.push(`${name}=${params[name]}`);\r\n                }\r\n            }\r\n            const urlSuffix = queryParts.join('&');\r\n            return `${baseUrl}?${urlSuffix}`;\r\n        }\r\n\r\n        doRequest(url, params = {}) {\r\n            params.apiKey = this.apiKey;\r\n            return fetch(this.getApiUrl(url, params))\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                    return response.json()\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    return {\r\n        Client\r\n    }\r\n\r\n})();\r\n"]}