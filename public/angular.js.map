{"version":3,"sources":["webpack:///./frontend/js/angular/index.js","webpack:///./~/bootstrap-sass/assets/stylesheets/_bootstrap.scss","webpack:///./~/angular-xeditable/dist/js/xeditable.js","webpack:///./~/angular-xeditable/dist/css/xeditable.css","webpack:///./frontend/js/angular/app/index.js","webpack:///./frontend/js/angular/app/app.module.js","webpack:///./frontend/js/angular/app/login/login.component.js","webpack:///./frontend/js/angular/app/common/states.const.js","webpack:///./frontend/js/angular/app/login/login.html","webpack:///./frontend/js/angular/app/articles/articles.component.js","webpack:///./frontend/js/angular/app/articles/index.html","webpack:///./frontend/js/angular/app/article/article.component.js","webpack:///./frontend/js/angular/app/article/edit.html","webpack:///./frontend/js/angular/app/common/components/pagination.component.js","webpack:///./frontend/js/angular/app/common/filters/pages.filter.js","webpack:///./frontend/js/angular/app/common/services/storage.service.js","webpack:///./frontend/js/angular/app/common/services/dataSource.service.js","webpack:///./frontend/js/DataSource.js","webpack:///./frontend/js/config.json","webpack:///./frontend/js/angular/app/common/services/article.resource.js","webpack:///./frontend/js/angular/app/main.html"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","LOGIN","url","template","APP","abstract","require","resolve","user","checkLogin","ARTICLES","ARTICLE_EDIT","article","$stateParams","Article","load","_id","id","$promise","ARTICLE_ADD","otherwise","run","$log","$rootScope","$state","$on","event","toState","toParams","fromState","fromParams","error","name","_","includes","status","preventDefault","go","element","bootstrap","document","getElementById","constant","component","LoginController","DataSourceService","ready","auth","login","pass","then","loginSuccess","bind","catch","doLogin","loginFailed","console","controller","AppStates","ArticlesController","articles","itemsPerPage","currentPage","loadList","query","ArticleController","data","source","update","create","$save","$create","bindings","PaginationController","pages","changesObj","totalCount","undefined","times","Math","ceil","index","min","filter","items","current","log","length","label","active","KEY_LOGGED_IN","KEY_TODOS","StorageService","$q","storage","localStorage","key","value","setItem","JSON","stringify","defaultValue","getItem","parse","service","getInstance","params","getSources","sourceId","getArticles","DataSource","instance","Object","assign","Source","doRequest","method","queryParams","body","req","Request","createUrl","headers","credentials","fetch","response","ok","json","baseUrl","queryParts","push","urlSuffix","join","factory","$resource","isArray","save","delete"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;AAEA;;AACA;;AAEA,0B;;;;;;;ACrBA,0C;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,wDAAuD,QAAQ;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0DAAyD,QAAQ;AACjE;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6FAA4F;;AAE5F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,YAAW;AACX,UAAS;AACT;AACA,MAAK;AACL,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,cAAa;AACb;AACA,UAAS;AACT,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,U;AACA,QAAO;AACP,IAAG;;AAEH,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,YAAW;AACX,UAAS;AACT;AACA,MAAK;AACL,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA,MAAK;AACL,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA,YAAW;AACX;AACA;AACA,cAAa;AACb;AACA,UAAS;AACT;AACA,MAAK;AACL,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,cAAc;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,iBAAiB;AAC9B;AACA;AACA,4B;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,iBAAiB;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,Q;;AAEA;AACA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAwC;AACxC,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,gBAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,YAAW;AACX;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS,wBAAwB;AACjC;AACA,wBAAuB;AACvB;AACA;AACA,YAAW,0HAA0H;AACrI;AACA;AACA;AACA,YAAW;AACX;AACA,0BAAyB,6BAA6B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,gBAAgB;;AAEjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA8C,aAAa,EAAE;AAC7D,+CAA8C,aAAa,EAAE;AAC7D,QAAO;AACP;AACA,IAAG;;AAEH;AACA,iBAAgB,kBAAkB;AAClC;AACA;AACA,IAAG,E;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,mBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO,M;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,Q;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA,Q;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,KAAK;AACpB;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA,MAAK;AACL;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA,YAAW;AACX;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,sBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB,iBAAiB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA,6DAA4D,mBAAmB;AAC/E;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA,4DAA2D,mBAAmB;AAC9E;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,gBAAe;AACf;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,E;;AAEb;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS,OAAO;AAChB;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;AACA,gBAAe;AACf;AACA,cAAa;AACb;AACA,8B;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB,kBAAkB;AACxC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA,MAAK,OAAO;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,E;AACT;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kB;AACA;AACA;;AAEA,gCAA+B,UAAU;AACzC,QAAO;;AAEP;AACA,sCAAqC;;AAErC;AACA;AACA;AACA;;AAEA,6BAA4B,UAAU;AACtC,QAAO,E;;AAEP;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+D;AACA;AACA;;AAEA;AACA,mBAAkB,gBAAgB;AAClC;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0E;AACA;AACA;AACA,iD;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAc,OAAO;AACrB;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA,Q;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAiC,yBAAyB;AAC1D;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAgB,QAAQ;AACxB;AACA;AACA,Q;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAc,OAAO;AACrB;AACA;AACA,Q;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yE;;AAEA;AACA;AACA,uB;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4D;AACA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,wC;AACA,OAAM;AACN,qD;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qD;AACA;AACA,sBAAqB;AACrB,Y;AACA,UAAS,E;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,oB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,a;;AAEA;AACA;AACA,SAAQ;;AAER;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,gF;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,UAAS;AACT;AACA,U;AACA;AACA,MAAK;;AAEL;AACA,mC;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,sFAAqF,kBAAkB;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;AACA,0EAAyE,sBAAsB;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,oEAAmE,kBAAkB;AACrF;AACA,8EAA6E,kBAAkB;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;;ACvmFD,0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"angular.js","sourcesContent":["import 'whatwg-fetch';\nimport 'babel-polyfill';\n\nimport 'jquery';\nimport 'bootstrap-sass/assets/stylesheets/_bootstrap.scss';\n\nimport 'angular';\nimport 'angular-animate';\nimport 'angular-sanitize';\nimport 'angular-aria';\nimport 'angular-messages';\nimport 'angular-resource';\n\nimport 'angular-ui-router';\n\nimport 'angular-xeditable';\nimport 'angular-xeditable/dist/css/xeditable.css';\n\nimport 'angular-strap';\nimport 'angular-strap/dist/angular-strap.tpl';\n\nimport './app';\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/js/angular/index.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bootstrap-sass/assets/stylesheets/_bootstrap.scss\n// module id = 300\n// module chunks = 0","/*!\nangular-xeditable - 0.6.0\nEdit-in-place for angular.js\nBuild date: 2016-12-27 \n*/\n/**\n * Angular-xeditable module \n *\n */\nangular.module('xeditable', [])\n\n\n/**\n * Default options. \n *\n * @namespace editable-options\n */\n//todo: maybe better have editableDefaults, not options...\n.value('editableOptions', {\n  /**\n   * Theme. Possible values `bs3`, `bs2`, `default`.  \n   * Default is `default`\n   * \n   * @var {string} theme\n   * @memberOf editable-options\n   */  \n  theme: 'default',\n  /**\n   * icon_set. Possible values `font-awesome`, `default`.  \n   * Default is `default`\n   * \n   * @var {string} icon set\n   * @memberOf editable-options\n   */  \n  icon_set: 'default',\n  /**\n   * Whether to show buttons for single editable element.  \n   * Possible values `right`, `no`.  \n   * Default is `right`\n   * \n   * @var {string} buttons\n   * @memberOf editable-options\n   */    \n  buttons: 'right',\n  /**\n   * Default value for `blur` attribute of single editable element.  \n   * Can be `cancel|submit|ignore`.  \n   * Default is `cancel`\n   * \n   * @var {string} blurElem\n   * @memberOf editable-options\n   */\n  blurElem: 'cancel',\n  /**\n   * Default value for `blur` attribute of editable form.  \n   * Can be `cancel|submit|ignore`.  \n   * Default is `ignore`.\n   * \n   * @var {string} blurForm\n   * @memberOf editable-options\n   */\n  blurForm: 'ignore',\n  /**\n   * How input elements get activated. Possible values: `focus|select|none`.  \n   * Default is `focus`\n   *\n   * @var {string} activate\n   * @memberOf editable-options\n   */\n  activate: 'focus',\n  /**\n   * Whether to disable x-editable. Can be overloaded on each element.  \n   * Default is `false`\n   *\n   * @var {boolean} isDisabled\n   * @memberOf editable-options\n   */\n   isDisabled: false,\n  \n  /**\n   * Event, on which the edit mode gets activated. \n   * Can be any event.  \n   * Default is `click`\n   *\n   * @var {string} activationEvent\n   * @memberOf editable-options\n   */\n  activationEvent: 'click',\n\n  /**\n   * The default title of the submit button.  \n   * Default is `Submit`\n   *\n   * @var {string} submitButtonTitle\n   * @memberOf editable-options\n   */\n  submitButtonTitle: 'Submit',\n\n  /**\n   * The default aria label of the submit button.  \n   * Default is `Submit`\n   *\n   * @var {string} submitButtonAriaLabel\n   * @memberOf editable-options\n   */\n  submitButtonAriaLabel: 'Submit',\n\n  /**\n   * The default title of the cancel button.  \n   * Default is `Cancel`\n   *\n   * @var {string} cancelButtonTitle\n   * @memberOf editable-options\n   */\n  cancelButtonTitle: 'Cancel',\n\n  /**\n   * The default aria label of the cancel button.  \n   * Default is `Cancel`\n   *\n   * @var {string} cancelButtonAriaLabel\n   * @memberOf editable-options\n   */\n  cancelButtonAriaLabel: 'Cancel',\n\n  /**\n   * The default title of the clear button.  \n   * Default is `Clear`\n   *\n   * @var {string} clearButtonTitle\n   * @memberOf editable-options\n   */\n  clearButtonTitle: 'Clear',\n\n  /**\n   * The default aria label of the clear button.  \n   * Default is `Clear`\n   *\n   * @var {string} clearButtonAriaLabel\n   * @memberOf editable-options\n   */\n  clearButtonAriaLabel: 'Clear',\n\n  /**\n   * Whether to display the clear button.  \n   * Default is `false`\n   *\n   * @var {boolean} displayClearButton\n   * @memberOf editable-options\n   */\n  displayClearButton: false\n});\n\n/*\n Angular-ui bootstrap datepicker\n http://angular-ui.github.io/bootstrap/#/datepicker\n */\nangular.module('xeditable').directive('editableBsdate', ['editableDirectiveFactory', '$injector', '$parse',\n    function(editableDirectiveFactory, $injector, $parse) {\n\n        // Constants from Angular-ui bootstrap datepicker\n        uibDatepickerConfig = $injector.get('uibDatepickerConfig');\n        uibDatepickerPopupConfig = $injector.get('uibDatepickerPopupConfig');\n\n        var popupAttrNames = [\n            ['eIsOpen', 'is-open'],\n            ['eDateDisabled', 'date-disabled'],\n            ['eDatepickerPopup', 'uib-datepicker-popup'],\n            ['eShowButtonBar', 'show-button-bar'],\n            ['eCurrentText', 'current-text'],\n            ['eClearText', 'clear-text'],\n            ['eCloseText', 'close-text'],\n            ['eCloseOnDateSelection', 'close-on-date-selection'],\n            ['eDatePickerAppendToBody', 'datepicker-append-to-body'],\n            ['eOnOpenFocus', 'on-open-focus'],\n            ['eName', 'name'],\n            ['eDateDisabled', 'date-disabled']\n        ];\n\n        var dateOptionsNames = [\n            ['eFormatDay', 'formatDay'],\n            ['eFormatMonth', 'formatMonth'],\n            ['eFormatYear', 'formatYear'],\n            ['eFormatDayHeader', 'formatDayHeader'],\n            ['eFormatDayTitle', 'formatDayTitle'],\n            ['eFormatMonthTitle', 'formatMonthTitle'],\n            ['eMaxMode', 'maxMode'],\n            ['eMinMode', 'minMode'],\n            ['eDatepickerMode', 'datepickerMode']\n        ];\n\n        return editableDirectiveFactory({\n            directiveName: 'editableBsdate',\n            inputTpl: '<div></div>',\n            render: function() {\n                /** This basically renders a datepicker as in the example shown in\n                 **  http://angular-ui.github.io/bootstrap/#/datepicker\n                 **  The attributes are all the same as in the bootstrap-ui datepicker with e- as prefix\n                 **/\n                this.parent.render.call(this);\n\n                var attrs = this.attrs;\n                var scope = this.scope;\n\n                var inputDatePicker = angular.element('<input type=\"text\" class=\"form-control\" ng-model=\"$parent.$data\"/>');\n\n                inputDatePicker.attr('uib-datepicker-popup', attrs.eDatepickerPopupXEditable || uibDatepickerPopupConfig.datepickerPopup );\n                inputDatePicker.attr('year-range', attrs.eYearRange || 20);\n                inputDatePicker.attr('ng-readonly', attrs.eReadonly || false);\n\n                for (var i = popupAttrNames.length - 1; i >= 0; i--) {\n                    var popupAttr = attrs[popupAttrNames[i][0]];\n                    if (typeof popupAttr !== 'undefined') {\n                        inputDatePicker.attr(popupAttrNames[i][1], popupAttr);\n                    }\n                }\n\n                if (attrs.eNgChange) {\n                    inputDatePicker.attr('ng-change', attrs.eNgChange);\n                    this.inputEl.removeAttr('ng-change');\n                }\n\n                if (attrs.eStyle) {\n                    inputDatePicker.attr('style', attrs.eStyle);\n                    this.inputEl.removeAttr('style');\n                }\n\n                var dateOptions = {\n                    maxDate: scope.$eval(attrs.eMaxDate) || uibDatepickerConfig.maxDate,\n                    minDate: scope.$eval(attrs.eMinDate) || uibDatepickerConfig.minDate,\n                    showWeeks: attrs.eShowWeeks ? attrs.eShowWeeks.toLowerCase() === 'true' : uibDatepickerConfig.showWeeks,\n                    startingDay: attrs.eStartingDay || 0,\n                    initDate: scope.$eval(attrs.eInitDate) || new Date()\n                };\n\n                if (attrs.eDatepickerOptions) {\n                    var eDatepickerOptions = $parse(attrs.eDatepickerOptions)(scope);\n                    angular.extend(dateOptions, eDatepickerOptions);\n                }\n\n                for (var z = dateOptionsNames.length - 1; z >= 0; z--) {\n                    var doAttr = attrs[dateOptionsNames[z][0]];\n                    if (typeof doAttr !== 'undefined') {\n                        dateOptions[dateOptionsNames[z][1]] = doAttr;\n                    }\n                }\n\n                scope.dateOptions = dateOptions;\n\n                var showCalendarButton = angular.isDefined(attrs.eShowCalendarButton) ? attrs.eShowCalendarButton : \"true\";\n\n                //See if calendar button should be displayed\n                if (showCalendarButton === \"true\") {\n                    var buttonDatePicker = angular.element('<button type=\"button\" class=\"btn btn-default\"><i class=\"glyphicon glyphicon-calendar\"></i></button>');\n                    var buttonWrapper = angular.element('<span class=\"input-group-btn\"></span>');\n\n                    buttonDatePicker.attr('ng-click', attrs.eNgClick);\n\n                    buttonWrapper.append(buttonDatePicker);\n\n                    this.inputEl.append(buttonWrapper);\n                } else {\n                    //If no calendar button, display calendar popup on click of input field\n                    inputDatePicker.attr('ng-click', attrs.eNgClick);\n                }\n\n                inputDatePicker.attr('datepicker-options', \"dateOptions\");\n\n                this.inputEl.prepend(inputDatePicker);\n\n                this.inputEl.removeAttr('class');\n                this.inputEl.removeAttr('ng-click');\n                this.inputEl.removeAttr('is-open');\n                this.inputEl.removeAttr('init-date');\n                this.inputEl.removeAttr('datepicker-popup');\n                this.inputEl.removeAttr('required');\n                this.inputEl.removeAttr('ng-model');\n                this.inputEl.removeAttr('date-picker-append-to-body');\n                this.inputEl.removeAttr('name');\n                this.inputEl.attr('class','input-group');\n            }\n    });\n}]);\n/*\nAngular-ui bootstrap editable timepicker\nhttp://angular-ui.github.io/bootstrap/#/timepicker\n*/\nangular.module('xeditable').directive('editableBstime', ['editableDirectiveFactory',\n  function(editableDirectiveFactory) {\n    return editableDirectiveFactory({\n      directiveName: 'editableBstime',\n      inputTpl: '<uib-timepicker></uib-timepicker>',\n      render: function() {\n        this.parent.render.call(this);\n\n        // timepicker can't update model when ng-model set directly to it\n        // see: https://github.com/angular-ui/bootstrap/issues/1141\n        // so we wrap it into DIV\n        var div = angular.element('<div class=\"well well-small\" style=\"display:inline-block;\"></div>');\n\n        // move ng-model to wrapping div\n        div.attr('ng-model', this.inputEl.attr('ng-model'));\n        this.inputEl.removeAttr('ng-model');\n\n        // move ng-change to wrapping div\n        if(this.attrs.eNgChange) {\n          div.attr('ng-change', this.inputEl.attr('ng-change'));\n          this.inputEl.removeAttr('ng-change');\n        }\n\n        // wrap\n        this.inputEl.wrap(div);\n      }\n    });\n}]);\n//checkbox\nangular.module('xeditable').directive('editableCheckbox', ['editableDirectiveFactory',\n  function(editableDirectiveFactory) {\n    return editableDirectiveFactory({\n      directiveName: 'editableCheckbox',\n      inputTpl: '<input type=\"checkbox\">',\n      render: function() {\n        this.parent.render.call(this);\n        if(this.attrs.eTitle) {\n          this.inputEl.wrap('<label></label>');\n          this.inputEl.parent().append('<span>' + this.attrs.eTitle + '</span>');\n        }\n      },\n      autosubmit: function() {\n        var self = this;\n        self.inputEl.bind('change', function() {\n          setTimeout(function() {\n            self.scope.$apply(function() {\n              self.scope.$form.$submit();\n            });\n          }, 500);\n        });\n      }\n    });\n}]);\n\n// checklist\nangular.module('xeditable').directive('editableChecklist', [\n  'editableDirectiveFactory',\n  'editableNgOptionsParser',\n  function(editableDirectiveFactory, editableNgOptionsParser) {\n    return editableDirectiveFactory({\n      directiveName: 'editableChecklist',\n      inputTpl: '<span></span>',\n      useCopy: true,\n      render: function() {\n        this.parent.render.call(this);\n        var parsed = editableNgOptionsParser(this.attrs.eNgOptions);\n        var ngChangeHtml = '';\n        var ngChecklistComparatorHtml = '';\n\n        if (this.attrs.eNgChange) {\n          ngChangeHtml = ' ng-change=\"' +  this.attrs.eNgChange + '\"';\n        }\n\n        if (this.attrs.eChecklistComparator) {\n          ngChecklistComparatorHtml = ' checklist-comparator=\"' +  this.attrs.eChecklistComparator + '\"';\n        }\n        \n        var html = '<label ng-repeat=\"'+parsed.ngRepeat+'\">'+\n          '<input type=\"checkbox\" checklist-model=\"$parent.$parent.$data\" checklist-value=\"'+parsed.locals.valueFn+'\"' +\n            ngChangeHtml + ngChecklistComparatorHtml + '>'+\n          '<span ng-bind=\"'+parsed.locals.displayFn+'\"></span></label>';\n\n        this.inputEl.removeAttr('ng-model');\n        this.inputEl.removeAttr('ng-options');\n        this.inputEl.removeAttr('ng-change');\n        this.inputEl.removeAttr('checklist-comparator');\n        this.inputEl.html(html);\n      }\n    });\n}]);\n\nangular.module('xeditable').directive('editableCombodate', ['editableDirectiveFactory', 'editableCombodate',\n  function(editableDirectiveFactory, editableCombodate) {\n    return editableDirectiveFactory({\n      directiveName: 'editableCombodate',\n      inputTpl: '<input type=\"text\">',\n      render: function() {\n        this.parent.render.call(this);\n\n        var options = {\n          value: new Date(this.scope.$data)\n        };\n        var self = this;\n        angular.forEach([\"format\", \"template\", \"minYear\", \"maxYear\", \"yearDescending\", \"minuteStep\", \"secondStep\", \"firstItem\", \"errorClass\", \"customClass\", \"roundTime\", \"smartDays\"], function(name) {\n\n          var attrName = \"e\" + name.charAt(0).toUpperCase() + name.slice(1);\n\n          if (attrName in self.attrs) {\n            if (name == \"minYear\" || name == \"maxYear\" || name == \"minuteStep\" || name == \"secondStep\") {\n              options[name] = parseInt(self.attrs[attrName], 10);\n            } else {\n              options[name] = self.attrs[attrName];\n            }\n          }\n        });\n\n        var combodate = editableCombodate.getInstance(this.inputEl, options);\n        combodate.$widget.find('select').bind('change', function(e) {\n          self.scope.$data = (new Date(combodate.getValue())).toISOString();\n        });\n      }\n    });\n  }\n]);\n\n/*\nInput types: text|password|email|tel|number|url|search|color|date|datetime|datetime-local|time|month|week|file\n*/\n\n(function() {\n\n  var camelCase = function(dashDelimitedString) {\n    return dashDelimitedString.toLowerCase().replace(/-(.)/g, function(match, word) {\n      return word.toUpperCase();\n    });\n  };\n\n  var types = 'text|password|email|tel|number|url|search|color|date|datetime|datetime-local|time|month|week|file'.split('|');\n\n  //todo: datalist\n  \n  // generate directives\n  angular.forEach(types, function(type) {\n    var directiveName = camelCase('editable' + '-' + type);\n    angular.module('xeditable').directive(directiveName, ['editableDirectiveFactory',\n      function(editableDirectiveFactory) {\n        return editableDirectiveFactory({\n          directiveName: directiveName,\n          inputTpl: '<input type=\"'+type+'\">',\n          render: function() {\n            this.parent.render.call(this);\n\n            //Add bootstrap simple input groups\n            if (this.attrs.eInputgroupleft || this.attrs.eInputgroupright) {\n              this.inputEl.wrap('<div class=\"input-group\"></div>');\n\n              if (this.attrs.eInputgroupleft) {\n                var inputGroupLeft = angular.element('<span class=\"input-group-addon\">' + this.attrs.eInputgroupleft + '</span>');\n                this.inputEl.parent().prepend(inputGroupLeft);\n              }\n\n              if (this.attrs.eInputgroupright) {\n                var inputGroupRight = angular.element('<span class=\"input-group-addon\">' + this.attrs.eInputgroupright + '</span>');\n                this.inputEl.parent().append(inputGroupRight);\n              }\n            }\n\n            // Add label to the input\n            if (this.attrs.eLabel) {\n              var label = angular.element('<label>' + this.attrs.eLabel + '</label>');\n              if (this.attrs.eInputgroupleft || this.attrs.eInputgroupright) {\n                this.inputEl.parent().parent().prepend(label);\n              } else {\n                this.inputEl.parent().prepend(label);\n              }\n            }\n            \n            // Add classes to the form\n            if (this.attrs.eFormclass) {\n              this.editorEl.addClass(this.attrs.eFormclass);\n            }\n          },\n          autosubmit: function() {\n            var self = this;\n            self.inputEl.bind('keydown', function(e) {\n                //submit on tab\n                if (e.keyCode === 9) {\n                    self.scope.$apply(function() {\n                        self.scope.$form.$submit();\n                    });\n                }\n            });\n          }\n        });\n    }]);\n  });\n\n  //`range` is bit specific\n  angular.module('xeditable').directive('editableRange', ['editableDirectiveFactory', '$interpolate',\n    function(editableDirectiveFactory, $interpolate) {\n      return editableDirectiveFactory({\n        directiveName: 'editableRange',\n        inputTpl: '<input type=\"range\" id=\"range\" name=\"range\">',\n        render: function() {\n          this.parent.render.call(this);\n          this.inputEl.after('<output>' + $interpolate.startSymbol() + '$data' + $interpolate.endSymbol()  + '</output>');\n        }        \n      });\n  }]);\n\n}());\n\n\n/*\n Tags input directive for AngularJS\n https://github.com/mbenford/ngTagsInput\n */\nangular.module('xeditable').directive('editableTagsInput', ['editableDirectiveFactory', 'editableUtils',\n  function(editableDirectiveFactory, editableUtils) {\n    var dir = editableDirectiveFactory({\n        directiveName: 'editableTagsInput',\n        inputTpl: '<tags-input></tags-input>',\n        render: function () {\n            this.parent.render.call(this);\n            this.inputEl.append(editableUtils.rename('auto-complete', this.attrs.$autoCompleteElement));\n            this.inputEl.removeAttr('ng-model');\n            this.inputEl.attr('ng-model', '$parent.$data');\n        }\n    });\n\n    var linkOrg = dir.link;\n\n    dir.link = function (scope, el, attrs, ctrl) {\n        var autoCompleteEl = el.find('editable-tags-input-auto-complete');\n\n        attrs.$autoCompleteElement = autoCompleteEl.clone();\n\n        autoCompleteEl.remove();\n\n        return linkOrg(scope, el, attrs, ctrl);\n    };\n\n    return dir;\n}]);\n// radiolist\nangular.module('xeditable').directive('editableRadiolist', [\n  'editableDirectiveFactory',\n  'editableNgOptionsParser',\n  '$interpolate',\n  function(editableDirectiveFactory, editableNgOptionsParser, $interpolate) {\n    return editableDirectiveFactory({\n      directiveName: 'editableRadiolist',\n      inputTpl: '<span></span>',\n      render: function() {\n        this.parent.render.call(this);\n        var parsed = editableNgOptionsParser(this.attrs.eNgOptions);\n        var ngChangeHtml = '';\n\n        if (this.attrs.eNgChange) {\n          ngChangeHtml = 'ng-change=\"' +  this.attrs.eNgChange + '\"';\n        }\n\n        var html = '<label data-ng-repeat=\"'+parsed.ngRepeat+'\">'+\n          '<input type=\"radio\" data-ng-disabled=\"::' +\n            this.attrs.eNgDisabled +\n            '\" data-ng-model=\"$parent.$parent.$data\" data-ng-value=\"' + $interpolate.startSymbol() +\n            '::' + parsed.locals.valueFn + $interpolate.endSymbol() +'\"' +\n            ngChangeHtml + '>'+\n          '<span data-ng-bind=\"::'+parsed.locals.displayFn+'\"></span></label>';\n\n        this.inputEl.removeAttr('ng-model');\n        this.inputEl.removeAttr('ng-options');\n        this.inputEl.removeAttr('ng-change');\n        this.inputEl.html(html);\n      },\n      autosubmit: function() {\n        var self = this;\n        self.inputEl.bind('change', function() {\n          setTimeout(function() {\n            self.scope.$apply(function() {\n              self.scope.$form.$submit();\n            });\n          }, 500);\n        });\n      }\n    });\n}]);\n\n//select\nangular.module('xeditable').directive('editableSelect', ['editableDirectiveFactory',\n  function(editableDirectiveFactory) {\n    return editableDirectiveFactory({\n      directiveName: 'editableSelect',\n      inputTpl: '<select></select>',\n      render: function() {\n        this.parent.render.call(this);\n\n        if (this.attrs.ePlaceholder) {\n          var placeholder = angular.element('<option value=\"\">' + this.attrs.ePlaceholder + '</option>');\n          this.inputEl.append(placeholder);\n        }\n      },\n      autosubmit: function() {\n        var self = this;\n        self.inputEl.bind('change', function() {\n          self.scope.$apply(function() {\n            self.scope.$form.$submit();\n          });\n        });\n      }\n    });\n}]);\n//textarea\nangular.module('xeditable').directive('editableTextarea', ['editableDirectiveFactory',\n  function(editableDirectiveFactory) {\n    return editableDirectiveFactory({\n      directiveName: 'editableTextarea',\n      inputTpl: '<textarea></textarea>',\n      addListeners: function() {\n        var self = this;\n        self.parent.addListeners.call(self);\n        // submit textarea by ctrl+enter even with buttons\n        if (self.single && self.buttons !== 'no') {\n          self.autosubmit();\n        }\n      },\n      autosubmit: function() {\n        var self = this;\n        self.inputEl.bind('keydown', function(e) {\n          if (self.attrs.submitOnEnter) {\n            if (e.keyCode === 13 && !e.shiftKey) {\n              self.scope.$apply(function() {\n                self.scope.$form.$submit();\n              });\n            }\n          } else if ((e.ctrlKey || e.metaKey) && (e.keyCode === 13)) {\n            self.scope.$apply(function() {\n              self.scope.$form.$submit();\n            });\n          }\n        });\n      }\n    });\n}]);\n\n/*\n jQuery UI Datepicker for AngularJS\n https://github.com/angular-ui/ui-date\n */\nangular.module('xeditable').directive('editableUidate', ['editableDirectiveFactory',\n    function(editableDirectiveFactory) {\n        return editableDirectiveFactory({\n            directiveName: 'editableUidate',\n            inputTpl: '<input class=\"form-control\" />',\n            render: function() {\n                this.parent.render.call(this);\n                this.inputEl.attr('ui-date', this.attrs.eUiDate);\n                this.inputEl.attr('placeholder', this.attrs.ePlaceholder);\n            }\n        });\n}]);\n\n/*\n AngularJS-native version of Select2 and Selectize\n https://github.com/angular-ui/ui-select\n */\nangular.module('xeditable').directive('editableUiSelect',['editableDirectiveFactory', 'editableUtils',\n    function(editableDirectiveFactory, editableUtils) {\n        var dir = editableDirectiveFactory({\n            directiveName: 'editableUiSelect',\n            inputTpl: '<ui-select></ui-select>',\n            render: function () {\n                this.parent.render.call(this);\n                this.inputEl.append(editableUtils.rename('ui-select-match', this.attrs.$matchElement));\n                this.inputEl.append(editableUtils.rename('ui-select-choices', this.attrs.$choicesElement));\n                this.inputEl.removeAttr('ng-model');\n                this.inputEl.attr('ng-model', '$parent.$parent.$data');\n            }\n        });\n\n        var linkOrg = dir.link;\n\n        dir.link = function (scope, el, attrs, ctrl) {\n            var matchEl = el.find('editable-ui-select-match');\n            var choicesEl = el.find('editable-ui-select-choices');\n\n            attrs.$matchElement = matchEl.clone();\n            attrs.$choicesElement = choicesEl.clone();\n\n            matchEl.remove();\n            choicesEl.remove();\n\n            return linkOrg(scope, el, attrs, ctrl);\n        };\n\n        return dir;\n    }]);\n/**\n * EditableController class. \n * Attached to element with `editable-xxx` directive.\n *\n * @namespace editable-element\n */\n/*\nTODO: this file should be refactored to work more clear without closures!\n*/\nangular.module('xeditable').factory('editableController', \n  ['$q', 'editableUtils',\n  function($q, editableUtils) {\n\n  //EditableController function\n  EditableController.$inject = ['$scope', '$attrs', '$element', '$parse', 'editableThemes', 'editableIcons', 'editableOptions', '$rootScope', '$compile', '$q'];\n  function EditableController($scope, $attrs, $element, $parse, editableThemes, editableIcons, editableOptions, $rootScope, $compile, $q) {\n    var valueGetter;\n\n    //if control is disabled - it does not participate in waiting process\n    var inWaiting;\n\n    var self = this;\n\n    self.scope = $scope;\n    self.elem = $element;\n    self.attrs = $attrs;\n    self.inputEl = null;\n    self.editorEl = null;\n    self.single = true;\n    self.error = '';\n    self.theme =  editableThemes[$attrs.editableTheme] || editableThemes[editableOptions.theme] || editableThemes['default'];\n    self.parent = {};\n\n    //will be undefined if icon_set is default and theme is default\n    var theme_name = $attrs.editableTheme || editableOptions.theme || 'default';\n    // The theme_name will not be correct if the theme set in options is unavailable\n    // However, in that case an undefined icon_set is not that bad...\n    var icon_set_option = $attrs.editableIconSet || editableOptions.icon_set;\n    self.icon_set = icon_set_option === 'default' ? editableIcons.default[theme_name] : editableIcons.external[icon_set_option];\n\n    //to be overwritten by directive\n    self.inputTpl = '';\n    self.directiveName = '';\n\n    // with majority of controls copy is not needed, but..\n    // copy MUST NOT be used for `select-multiple` with objects as items\n    // copy MUST be used for `checklist`\n    self.useCopy = false;\n\n    //runtime (defaults)\n    self.single = null;\n\n    /**\n     * Attributes defined with `e-*` prefix automatically transferred from original element to\n     * control.  \n     * For example, if you set `<span editable-text=\"user.name\" e-style=\"width: 100px\"`>\n     * then input will appear as `<input style=\"width: 100px\">`.  \n     * See [demo](#text-customize).\n     * \n     * @var {any|attribute} e-*\n     * @memberOf editable-element\n     */ \n\n    /**\n     * Whether to show ok/cancel buttons. Values: `right|no`.\n     * If set to `no` control automatically submitted when value changed.  \n     * If control is part of form buttons will never be shown. \n     * \n     * @var {string|attribute} buttons\n     * @memberOf editable-element\n     */    \n    self.buttons = 'right'; \n    /**\n     * Action when control losses focus. Values: `cancel|submit|ignore`.\n     * Has sense only for single editable element.\n     * Otherwise, if control is part of form - you should set `blur` of form, not of individual element.\n     * \n     * @var {string|attribute} blur\n     * @memberOf editable-element\n     */     \n    // no real `blur` property as it is transferred to editable form\n\n    //init\n    self.init = function(single) {\n      self.single = single;\n\n      self.name = $attrs.eName || $attrs[self.directiveName];\n      /*\n      if(!$attrs[directiveName] && !$attrs.eNgModel && ($attrs.eValue === undefined)) {\n        throw 'You should provide value for `'+directiveName+'` or `e-value` in editable element!';\n      }\n      */\n      if($attrs[self.directiveName]) {\n        valueGetter = $parse($attrs[self.directiveName]);\n      } else {\n        throw 'You should provide value for `'+self.directiveName+'` in editable element!';\n      }\n\n      // settings for single and non-single\n      if (!self.single) {\n        // hide buttons for non-single\n        self.buttons = 'no';\n      } else {\n        self.buttons = self.attrs.buttons || editableOptions.buttons;\n      }\n\n      //if name defined --> watch changes and update $data in form\n      if($attrs.eName) {\n        self.scope.$watch('$data', function(newVal){\n          self.scope.$form.$data[$attrs.eName] = newVal;\n        });\n      }\n\n      /**\n       * Called when control is shown.  \n       * See [demo](#select-remote).\n       * \n       * @var {method|attribute} onshow\n       * @memberOf editable-element\n       */\n      if($attrs.onshow) {\n        self.onshow = function() {\n          return self.catchError($parse($attrs.onshow)($scope));\n        };\n      }\n\n      /**\n       * Called when control is hidden after both save or cancel.  \n       * \n       * @var {method|attribute} onhide\n       * @memberOf editable-element\n       */\n      if($attrs.onhide) {\n        self.onhide = function() {\n          return $parse($attrs.onhide)($scope);\n        };\n      }\n\n      /**\n       * Called when control is cancelled.  \n       * \n       * @var {method|attribute} oncancel\n       * @memberOf editable-element\n       */\n      if($attrs.oncancel) {\n        self.oncancel = function() {\n          return $parse($attrs.oncancel)($scope);\n        };\n      }          \n\n      /**\n       * Called during submit before value is saved to model.  \n       * See [demo](#onbeforesave).\n       * \n       * @var {method|attribute} onbeforesave\n       * @memberOf editable-element\n       */\n      if ($attrs.onbeforesave) {\n        self.onbeforesave = function() {\n          return self.catchError($parse($attrs.onbeforesave)($scope));\n        };\n      }\n\n      /**\n       * Called during submit after value is saved to model.  \n       * See [demo](#onaftersave).\n       * \n       * @var {method|attribute} onaftersave\n       * @memberOf editable-element\n       */\n      if ($attrs.onaftersave) {\n        self.onaftersave = function() {\n          return self.catchError($parse($attrs.onaftersave)($scope));\n        };\n      }\n\n      // watch change of model to update editable element\n      // now only add/remove `editable-empty` class.\n      // Initially this method called with newVal = undefined, oldVal = undefined\n      // so no need initially call handleEmpty() explicitly\n      $scope.$parent.$watch($attrs[self.directiveName], function(newVal, oldVal) {\n        self.setLocalValue();\n        self.handleEmpty();\n      });\n    };\n\n    self.render = function() {\n      var theme = self.theme;\n\n      //build input\n      self.inputEl = angular.element(self.inputTpl);\n\n      //build controls\n      self.controlsEl = angular.element(theme.controlsTpl);\n      self.controlsEl.append(self.inputEl);\n\n      //build buttons\n      if(self.buttons !== 'no') {\n        self.buttonsEl = angular.element(theme.buttonsTpl);\n        self.submitEl = angular.element(theme.submitTpl);\n        self.resetEl = angular.element(theme.resetTpl);\n        self.cancelEl = angular.element(theme.cancelTpl);\n        self.submitEl.attr('title', editableOptions.submitButtonTitle);\n        self.submitEl.attr('aria-label', editableOptions.submitButtonAriaLabel);\n        self.cancelEl.attr('title', editableOptions.cancelButtonTitle);\n        self.cancelEl.attr('aria-label', editableOptions.cancelButtonAriaLabel);\n        self.resetEl.attr('title', editableOptions.clearButtonTitle);\n        self.resetEl.attr('aria-label', editableOptions.clearButtonAriaLabel);\n\n        if (self.icon_set) {\n          self.submitEl.find('span').addClass(self.icon_set.ok);\n          self.cancelEl.find('span').addClass(self.icon_set.cancel);\n          self.resetEl.find('span').addClass(self.icon_set.clear);\n        }\n\n        self.buttonsEl.append(self.submitEl).append(self.cancelEl);\n\n        if (editableOptions.displayClearButton) {\n          self.buttonsEl.append(self.resetEl);\n        }\n\n        self.controlsEl.append(self.buttonsEl);\n        \n        self.inputEl.addClass('editable-has-buttons');\n      }\n\n      //build error\n      self.errorEl = angular.element(theme.errorTpl);\n      self.controlsEl.append(self.errorEl);\n\n      //build editor\n      self.editorEl = angular.element(self.single ? theme.formTpl : theme.noformTpl);\n      self.editorEl.append(self.controlsEl);\n\n      // transfer `e-*|data-e-*|x-e-*` attributes\n      for (var k in $attrs.$attr) {\n        if(k.length <= 1) {\n          continue;\n        }\n        var transferAttr = false;\n        var nextLetter = k.substring(1, 2);\n\n        // if starts with `e` + uppercase letter\n        if (k.substring(0, 1) === 'e' && nextLetter === nextLetter.toUpperCase()) {\n          transferAttr = k.substring(1); // cut `e`\n        } else {\n          continue;\n        }\n        \n        // exclude `form` and `ng-submit`, \n        if (transferAttr === 'Form' || transferAttr === 'NgSubmit') {\n          continue;\n        }\n\n        var firstLetter = transferAttr.substring(0, 1);\n        var secondLetter = transferAttr.substring(1, 2);\n\n        // convert back to lowercase style\n        if (secondLetter === secondLetter.toUpperCase() &&\n            firstLetter === firstLetter.toUpperCase()) {\n          transferAttr = firstLetter.toLowerCase() + '-' + editableUtils.camelToDash(transferAttr.substring(1));\n        } else {\n          transferAttr = firstLetter.toLowerCase() + editableUtils.camelToDash(transferAttr.substring(1));\n        }\n\n        // workaround for attributes without value (e.g. `multiple = \"multiple\"`)\n        // except for 'e-value'\n        var attrValue = (transferAttr !== 'value' && $attrs[k] === '') ? transferAttr : $attrs[k];\n\n        // set attributes to input\n        self.inputEl.attr(transferAttr, attrValue);\n      }\n\n      self.inputEl.addClass('editable-input');\n      self.inputEl.attr('ng-model', '$parent.$data');\n\n      // add directiveName class to editor, e.g. `editable-text`\n      self.editorEl.addClass(editableUtils.camelToDash(self.directiveName));\n\n      if (self.single) {\n        self.editorEl.attr('editable-form', '$form');\n        // transfer `blur` to form\n        self.editorEl.attr('blur', self.attrs.blur || (self.buttons === 'no' ? 'cancel' : editableOptions.blurElem));\n      }\n\n      //apply `postrender` method of theme\n      if (angular.isFunction(theme.postrender)) {\n        theme.postrender.call(self);\n      }\n\n    };\n\n    // with majority of controls copy is not needed, but..\n    // copy MUST NOT be used for `select-multiple` with objects as items\n    // copy MUST be used for `checklist`\n    self.setLocalValue = function() {\n      self.scope.$data = self.useCopy ? \n        angular.copy(valueGetter($scope.$parent)) : \n        valueGetter($scope.$parent);\n    };\n\n    // reference of the scope to use for $compile\n    var newScope = null;\n    //show\n    self.show = function() {\n      // set value of scope.$data\n      self.setLocalValue();\n\n      /*\n      Originally render() was inside init() method, but some directives polluting editorEl,\n      so it is broken on second openning.\n      Cloning is not a solution as jqLite can not clone with event handler's.\n      */\n      self.render();\n\n      // insert into DOM\n      $element.after(self.editorEl);\n\n      // compile (needed to attach ng-* events from markup)\n      newScope = $scope.$new();\n      $compile(self.editorEl)(newScope);\n\n      // attach listeners (`escape`, autosubmit, etc)\n      self.addListeners();\n\n      // hide element\n      $element.addClass('editable-hide');\n\n      // onshow\n      return self.onshow();\n    };\n\n    //hide\n    self.hide = function() {\n\n      // destroy the scope to prevent memory leak\n      newScope.$destroy();\n\n      self.controlsEl.remove();\n      self.editorEl.remove();\n      $element.removeClass('editable-hide');\n\n      // onhide\n      return self.onhide();\n    };\n\n    // cancel\n    self.cancel = function() {\n      // oncancel\n      self.oncancel();\n      // don't call hide() here as it called in form's code\n    };\n\n    /*\n    Called after show to attach listeners\n    */\n    self.addListeners = function() {\n      // bind keyup for `escape`\n      self.inputEl.bind('keyup', function(e) {\n          if(!self.single) {\n            return;\n          }\n\n          // todo: move this to editable-form!\n          switch(e.keyCode) {\n            // hide on `escape` press\n            case 27:\n              self.scope.$apply(function() {\n                self.scope.$form.$cancel();\n              });\n            break;\n          }\n      });\n\n      // autosubmit when `no buttons`\n      if (self.single && self.buttons === 'no') {\n        self.autosubmit();\n      }\n\n      // click - mark element as clicked to exclude in document click handler\n      self.editorEl.bind('click', function(e) {\n        // ignore right/middle button click\n        if (e.which && e.which !== 1) {\n          return;\n        }\n\n        if (self.scope.$form.$visible) {\n          self.scope.$form._clicked = true;\n        }\n      });\n    };\n\n    // setWaiting\n    self.setWaiting = function(value) {\n      if (value) {\n        // participate in waiting only if not disabled\n        inWaiting = !self.inputEl.attr('disabled') &&\n                    !self.inputEl.attr('ng-disabled') &&\n                    !self.inputEl.attr('ng-enabled');\n        if (inWaiting) {\n          self.inputEl.attr('disabled', 'disabled');\n          if(self.buttonsEl) {\n            self.buttonsEl.find('button').attr('disabled', 'disabled');\n          }\n        }\n      } else {\n        if (inWaiting) {\n          self.inputEl.removeAttr('disabled');\n          if (self.buttonsEl) {\n            self.buttonsEl.find('button').removeAttr('disabled');\n          }\n        }\n      }\n    };\n\n    self.activate = function(start, end) {\n      setTimeout(function() {\n        var el = self.inputEl[0];\n\n        if (editableOptions.activate === 'focus' && el.focus) {\n          if (start !== undefined && start !== \"\" && el.setSelectionRange) {\n            end = end || start;\n            el.onfocus = function() {\n              setTimeout(function() {\n                try {\n                  this.setSelectionRange(start,end);\n                } catch(e) {\n                  //do nothing, this input doesn't support setSelectionRange\n                }\n              }.bind(this));\n            };\n          }\n          \n          if (self.directiveName == 'editableRadiolist' || self.directiveName == 'editableChecklist' ||\n              self.directiveName == 'editableBsdate' || self.directiveName == 'editableTagsInput') {\n            //Set focus to first pristine element in the list\n            el.querySelector('.ng-pristine').focus();\n          } else {\n            el.focus();\n          }\n        } else if (editableOptions.activate === 'select') {\n          if (el.select){\n            el.select();\n          } else if (el.focus) {\n            el.focus();\n          }\n        }\n      }, 0);\n    };\n\n    self.setError = function(msg) {\n      if(!angular.isObject(msg)) {\n        $scope.$error = msg;\n        self.error = msg;\n      }\n    };\n\n    /*\n    Checks that result is string or promise returned string and shows it as error message\n    Applied to onshow, onbeforesave, onaftersave\n    */\n    self.catchError = function(result, noPromise) {\n      if (angular.isObject(result) && noPromise !== true) {\n        $q.when(result).then(\n          //success and fail handlers are equal\n          angular.bind(this, function(r) {\n            this.catchError(r, true);\n          }),\n          angular.bind(this, function(r) {\n            this.catchError(r, true);\n          })\n        );\n      //check $http error\n      } else if (noPromise && angular.isObject(result) && result.status &&\n        (result.status !== 200) && result.data && angular.isString(result.data)) {\n        this.setError(result.data);\n        //set result to string: to let form know that there was error\n        result = result.data;\n      } else if (angular.isString(result)) {\n        this.setError(result);\n      }\n      return result;\n    };\n\n    self.save = function() {\n      valueGetter.assign($scope.$parent,\n          self.useCopy ? angular.copy(self.scope.$data) : self.scope.$data);\n\n      // no need to call handleEmpty here as we are watching change of model value\n      // self.handleEmpty();\n    };\n\n    /*\n    attach/detach `editable-empty` class to element\n    */\n    self.handleEmpty = function() {\n      var val = valueGetter($scope.$parent);\n      var isEmpty = val === null || val === undefined || val === \"\" || (angular.isArray(val) && val.length === 0); \n      $element.toggleClass('editable-empty', isEmpty);\n    };\n\n    /*\n    Called when `buttons = \"no\"` to submit automatically\n    */\n    self.autosubmit = angular.noop;\n\n    self.onshow = angular.noop;\n    self.onhide = angular.noop;\n    self.oncancel = angular.noop;\n    self.onbeforesave = angular.noop;\n    self.onaftersave = angular.noop;\n  }\n\n  return EditableController;\n}]);\n\n/*\neditableFactory is used to generate editable directives (see `/directives` folder)\nInside it does several things:\n- detect form for editable element. Form may be one of three types:\n  1. autogenerated form (for single editable elements)\n  2. wrapper form (element wrapped by <form> tag)\n  3. linked form (element has `e-form` attribute pointing to existing form)\n\n- attach editableController to element\n\nDepends on: editableController, editableFormFactory\n*/\nangular.module('xeditable').factory('editableDirectiveFactory',\n['$parse', '$compile', 'editableThemes', '$rootScope', '$document', 'editableController', 'editableFormController', 'editableOptions',\nfunction($parse, $compile, editableThemes, $rootScope, $document, editableController, editableFormController, editableOptions) {\n\n  //directive object\n  return function(overwrites) {\n    return {\n      restrict: 'A',\n      scope: true,\n      require: [overwrites.directiveName, '?^form'],\n      controller: editableController,\n      link: function(scope, elem, attrs, ctrl) {\n        // editable controller\n        var eCtrl = ctrl[0];\n\n        // form controller\n        var eFormCtrl;\n\n        // this variable indicates is element is bound to some existing form,\n        // or it's single element who's form will be generated automatically\n        // By default consider single element without any linked form.ß\n        var hasForm = false;\n\n        // element wrapped by form\n        if (ctrl[1]) {\n          eFormCtrl = ctrl[1];\n          hasForm = attrs.eSingle === undefined;\n        } else if (attrs.eForm) { // element not wrapped by <form>, but we have `e-form` attr\n          var getter = $parse(attrs.eForm)(scope);\n          if (getter) { // form exists in scope (above), e.g. editable column\n            eFormCtrl = getter;\n            hasForm = true;\n          } else if (elem && typeof elem.parents === \"function\" && elem.parents().last().find('form[name='+attrs.eForm+']').length) { // form exists below or not exist at all: check document.forms\n            // form is below and not processed yet\n            eFormCtrl = null;\n            hasForm = true;\n          } else {\n            // form exists below or not exist at all: check document.forms\n            for (var i=0; i<$document[0].forms.length;i++) {\n              if ($document[0].forms[i].name === attrs.eForm) {\n                // form is below and not processed yet\n                eFormCtrl = null;\n                hasForm = true;\n                break;\n              }\n            }\n          }\n        }\n\n        /*\n        if(hasForm && !attrs.eName) {\n          throw 'You should provide `e-name` for editable element inside form!';\n        }\n        */\n\n        //check for `editable-form` attr in form\n        /*\n        if(eFormCtrl && ) {\n          throw 'You should provide `e-name` for editable element inside form!';\n        }\n        */\n\n        // store original props to `parent` before merge\n        angular.forEach(overwrites, function(v, k) {\n          if(eCtrl[k] !== undefined) {\n            eCtrl.parent[k] = eCtrl[k];\n          }\n        });\n\n        // merge overwrites to base editable controller\n        angular.extend(eCtrl, overwrites);\n\n        // x-editable can be disabled using editableOption or edit-disabled attribute\n        var is_disabled = function() {\n          return angular.isDefined(attrs.editDisabled) ?\n            scope.$eval(attrs.editDisabled) :\n            editableOptions.isDisabled;\n        };\n\n        // init editable ctrl\n        eCtrl.init(!hasForm);\n\n        // publich editable controller as `$editable` to be referenced in html\n        scope.$editable = eCtrl;\n\n        // add `editable` class to element\n        elem.addClass('editable');\n\n        // hasForm\n        if(hasForm) {\n          if(eFormCtrl) {\n            scope.$form = eFormCtrl;\n            if(!scope.$form.$addEditable) {\n              throw 'Form with editable elements should have `editable-form` attribute.';\n            }\n            scope.$form.$addEditable(eCtrl);\n          } else {\n            // future form (below): add editable controller to buffer and add to form later\n            $rootScope.$$editableBuffer = $rootScope.$$editableBuffer || {};\n            $rootScope.$$editableBuffer[attrs.eForm] = $rootScope.$$editableBuffer[attrs.eForm] || [];\n            $rootScope.$$editableBuffer[attrs.eForm].push(eCtrl);\n            scope.$form = null; //will be re-assigned later\n          }\n        // !hasForm\n        } else {\n          // create editableform controller\n          scope.$form = editableFormController();\n          // add self to editable controller\n          scope.$form.$addEditable(eCtrl);\n\n          // if `e-form` provided, publish local $form in scope\n          if(attrs.eForm) {\n            ($parse(attrs.eForm).assign || angular.noop)(scope.$parent, scope.$form);\n          }\n\n          // bind click - if no external form defined\n          if(!attrs.eForm || attrs.eClickable) {\n            elem.addClass('editable-click');\n            elem.bind(editableOptions.activationEvent, function(e) {\n              e.preventDefault();\n              e.editable = eCtrl;\n              if(!is_disabled()) {\n                scope.$apply(function(){\n                  scope.$form.$show();\n                });\n              }\n            });\n          }\n        }\n\n      }\n    };\n  };\n}]);\n\n/*\nReturns editableForm controller\n*/\nangular.module('xeditable').factory('editableFormController', \n  ['$parse', '$document', '$rootScope', 'editablePromiseCollection', 'editableUtils',\n  function($parse, $document, $rootScope, editablePromiseCollection, editableUtils) {\n\n  // array of opened editable forms\n  var shown = [];\n\n  //Check if the child element correspond or is a descendant of the parent element\n  var isSelfOrDescendant = function (parent, child) {\n    if (child == parent) {\n      return true;\n    }\n\n    var node = child.parentNode;\n    while (node !== null) {\n      if (node == parent) {\n        return true;\n      }\n      node = node.parentNode;\n    }\n    return false;\n  };\n  \n  //Check if it is a real blur : if the click event appear on a shown editable elem, this is not a blur.\n  var isBlur = function(shown, event) {\n    var isBlur = true;\n\n    var editables = shown.$editables;\n    angular.forEach(editables, function(v){\n      var element = v.editorEl[0];\n      if (isSelfOrDescendant(element, event.target))\n        isBlur = false;\n      \n    });\n    return isBlur;\n  };\n  \n  // bind click to body: cancel|submit|ignore forms\n  $document.bind('click', function(e) {\n    // ignore right/middle button click\n    if (e.which && e.which !== 1) {\n      return;\n    }\n\n    var toCancel = [];\n    var toSubmit = [];\n    for (var i=0; i<shown.length; i++) {\n\n      // exclude clicked\n      if (shown[i]._clicked) {\n        shown[i]._clicked = false;\n        continue;\n      }\n\n      // exclude waiting\n      if (shown[i].$waiting) {\n        continue;\n      }\n\n      if (shown[i]._blur === 'cancel' && isBlur(shown[i], e)) {\n        toCancel.push(shown[i]);\n      }\n\n      if (shown[i]._blur === 'submit' && isBlur(shown[i], e)) {\n        toSubmit.push(shown[i]);\n      }\n    }\n\n    if (toCancel.length || toSubmit.length) {\n      $rootScope.$apply(function() {\n        angular.forEach(toCancel, function(v){ v.$cancel(); });\n        angular.forEach(toSubmit, function(v){ v.$submit(); });\n      });\n    }\n  });\n \n  $rootScope.$on('closeEdit', function() {\n    for(var i=0; i < shown.length; i++) {\n      shown[i].$hide();\n    }\n  }); \n\n  var base = {\n    $addEditable: function(editable) {\n      //console.log('add editable', editable.elem, editable.elem.bind);\n      this.$editables.push(editable);\n\n      //'on' is not supported in angular 1.0.8\n      editable.elem.bind('$destroy', angular.bind(this, this.$removeEditable, editable));\n\n      //bind editable's local $form to self (if not bound yet, below form) \n      if (!editable.scope.$form) {\n        editable.scope.$form = this;\n      }\n\n      //if form already shown - call show() of new editable\n      if (this.$visible) {\n        editable.catchError(editable.show());\n      }\n      editable.catchError(editable.setWaiting(this.$waiting));\n    },\n\n    $removeEditable: function(editable) {\n      //arrayRemove\n      for(var i=0; i < this.$editables.length; i++) {\n        if(this.$editables[i] === editable) {\n          this.$editables.splice(i, 1);\n          return;\n        }\n      }\n    },\n\n    /**\n     * Shows form with editable controls.\n     * \n     * @method $show()\n     * @memberOf editable-form\n     */\n    $show: function() {\n      if (this.$visible) {\n        return;\n      }\n\n      this.$visible = true;\n\n      var pc = editablePromiseCollection();\n\n      //own show\n      pc.when(this.$onshow());\n\n      //clear errors\n      this.$setError(null, '');\n\n      //children show\n      angular.forEach(this.$editables, function(editable) {\n        pc.when(editable.show());\n      });\n\n      //wait promises and activate\n      pc.then({\n        onWait: angular.bind(this, this.$setWaiting), \n        onTrue: angular.bind(this, this.$activate), \n        onFalse: angular.bind(this, this.$activate), \n        onString: angular.bind(this, this.$activate)\n      });\n\n      // add to internal list of shown forms\n      // setTimeout needed to prevent closing right after opening (e.g. when trigger by button)\n      setTimeout(angular.bind(this, function() {\n        // clear `clicked` to get ready for clicks on visible form\n        this._clicked = false;\n        if(editableUtils.indexOf(shown, this) === -1) {\n          shown.push(this);\n        }\n      }), 0);      \n    },\n\n    /**\n     * Sets focus on form field specified by `name`.<br/>\n     * When trying to set the focus on a form field of a new row in the editable table, the `$activate` call needs to be wrapped in a `$timeout` call so that the form is rendered before the `$activate` function is called.\n     * \n     * @method $activate(name)\n     * @param {string} name name of field\n     * @memberOf editable-form\n     */\n    $activate: function(name) {\n      var i,\n          selectionStart,\n          selectionEnd;\n      if (this.$editables.length) {\n        //activate by name\n        if (angular.isString(name)) {\n          for(i=0; i<this.$editables.length; i++) {\n            if (this.$editables[i].name === name) {\n              this.$editables[i].activate();\n              return;\n            }\n          }\n        }\n\n        //try activate error field\n        for(i=0; i<this.$editables.length; i++) {\n          if (this.$editables[i].error) {\n            this.$editables[i].activate();\n            return;\n          }\n        }\n\n        //by default activate first field\n        selectionStart = this.$editables[0].elem[0].selectionStart ? \n            this.$editables[0].elem[0].selectionStart : \n              this.$editables[0].elem[0].text ? this.$editables[0].elem[0].text.length : 0;\n        selectionEnd = this.$editables[0].elem[0].selectionEnd ? \n            this.$editables[0].elem[0].selectionEnd : \n              this.$editables[0].elem[0].text ? this.$editables[0].elem[0].text.length : 0;\n        this.$editables[0].activate(selectionStart, selectionEnd);\n      }\n    },\n\n    /**\n     * Hides form with editable controls without saving.\n     * \n     * @method $hide()\n     * @memberOf editable-form\n     */\n    $hide: function() {\n      if (!this.$visible) {\n        return;\n      }      \n      this.$visible = false;\n      // self hide\n      this.$onhide();\n      // children's hide\n      angular.forEach(this.$editables, function(editable) {\n        editable.hide();\n      });\n\n      // remove from internal list of shown forms\n      editableUtils.arrayRemove(shown, this);\n    },\n\n    /**\n     * Triggers `oncancel` event and calls `$hide()`.\n     * \n     * @method $cancel()\n     * @memberOf editable-form\n     */\n    $cancel: function() {\n      if (!this.$visible) {\n        return;\n      }      \n      // self cancel\n      this.$oncancel();\n      // children's cancel      \n      angular.forEach(this.$editables, function(editable) {\n        editable.cancel();\n      });\n      // self hide\n      this.$hide();\n    },    \n\n    $setWaiting: function(value) {\n      this.$waiting = !!value;\n      // we can't just set $waiting variable and use it via ng-disabled in children\n      // because in editable-row form is not accessible\n      angular.forEach(this.$editables, function(editable) {\n        editable.setWaiting(!!value);\n      });\n    },\n\n    /**\n     * Shows error message for particular field.\n     * \n     * @method $setError(name, msg)\n     * @param {string} name name of field\n     * @param {string} msg error message\n     * @memberOf editable-form\n     */\n    $setError: function(name, msg) {\n      angular.forEach(this.$editables, function(editable) {\n        if(!name || editable.name === name) {\n          editable.setError(msg);\n        }\n      });\n    },\n\n    $submit: function() {\n      if (this.$waiting) {\n        return;\n      } \n\n      //clear errors\n      this.$setError(null, '');\n\n      //children onbeforesave\n      var pc = editablePromiseCollection();\n      angular.forEach(this.$editables, function(editable) {\n        pc.when(editable.onbeforesave());\n      });\n\n      /*\n      onbeforesave result:\n      - true/undefined: save data and close form\n      - false: close form without saving\n      - string: keep form open and show error\n      */\n      pc.then({\n        onWait: angular.bind(this, this.$setWaiting), \n        onTrue: angular.bind(this, checkSelf, true), \n        onFalse: angular.bind(this, checkSelf, false), \n        onString: angular.bind(this, this.$activate)\n      });\n\n      //save\n      function checkSelf(childrenTrue){\n        var pc = editablePromiseCollection();\n        pc.when(this.$onbeforesave());\n        pc.then({\n          onWait: angular.bind(this, this.$setWaiting), \n          onTrue: childrenTrue ? angular.bind(this, this.$save) : angular.bind(this, this.$hide), \n          onFalse: angular.bind(this, this.$hide), \n          onString: angular.bind(this, this.$activate)\n        });\n      }\n    },\n\n    $save: function() {\n      // write model for each editable\n      angular.forEach(this.$editables, function(editable) {\n        editable.save();\n      });\n\n      //call onaftersave of self and children\n      var pc = editablePromiseCollection();\n      pc.when(this.$onaftersave());\n      angular.forEach(this.$editables, function(editable) {\n        pc.when(editable.onaftersave());\n      });\n\n      /*\n      onaftersave result:\n      - true/undefined/false: just close form\n      - string: keep form open and show error\n      */\n      pc.then({\n        onWait: angular.bind(this, this.$setWaiting), \n        onTrue: angular.bind(this, this.$hide), \n        onFalse: angular.bind(this, this.$hide), \n        onString: angular.bind(this, this.$activate)\n      });\n    },\n\n    $onshow: angular.noop,\n    $oncancel: angular.noop,\n    $onhide: angular.noop,\n    $onbeforesave: angular.noop,\n    $onaftersave: angular.noop\n  };\n\n  return function() {\n    return angular.extend({\n      $editables: [],\n      /**\n       * Form visibility flag.\n       * \n       * @var {bool} $visible\n       * @memberOf editable-form\n       */\n      $visible: false,\n      /**\n       * Form waiting flag. It becomes `true` when form is loading or saving data.\n       * \n       * @var {bool} $waiting\n       * @memberOf editable-form\n       */\n      $waiting: false,\n      $data: {},\n      _clicked: false,\n      _blur: null\n    }, base);\n  };\n}]);\n\n/**\n * EditableForm directive. Should be defined in <form> containing editable controls.  \n * It add some usefull methods to form variable exposed to scope by `name=\"myform\"` attribute.\n *\n * @namespace editable-form\n */\nangular.module('xeditable').directive('editableForm',\n  ['$rootScope', '$parse', 'editableFormController', 'editableOptions',\n  function($rootScope, $parse, editableFormController, editableOptions) {\n    return {\n      restrict: 'A',\n      require: ['form'],\n      //require: ['form', 'editableForm'],\n      //controller: EditableFormController,\n      compile: function() {\n        return {\n          pre: function(scope, elem, attrs, ctrl) {\n            var form = ctrl[0];\n            var eForm;\n\n            //if `editableForm` has value - publish smartly under this value\n            //this is required only for single editor form that is created and removed\n            if(attrs.editableForm) {\n              if(scope[attrs.editableForm] && scope[attrs.editableForm].$show) {\n                eForm = scope[attrs.editableForm];\n                angular.extend(form, eForm);\n              } else {\n                eForm = editableFormController();\n                scope[attrs.editableForm] = eForm;\n                angular.extend(eForm, form);\n              }\n            } else { //just merge to form and publish if form has name\n              eForm = editableFormController();\n              angular.extend(form, eForm);\n            }\n\n            //read editables from buffer (that appeared before FORM tag)\n            var buf = $rootScope.$$editableBuffer;\n            var name = form.$name;\n            if(name && buf && buf[name]) {\n              angular.forEach(buf[name], function(editable) {\n                eForm.$addEditable(editable);\n              });\n              delete buf[name];\n            }\n          },\n          post: function(scope, elem, attrs, ctrl) {\n            var eForm;\n\n            if(attrs.editableForm && scope[attrs.editableForm] && scope[attrs.editableForm].$show) {\n              eForm = scope[attrs.editableForm];\n            } else {\n              eForm = ctrl[0];\n            }\n\n            /**\n             * Called when form is shown.\n             * \n             * @var {method|attribute} onshow \n             * @memberOf editable-form\n             */\n            if(attrs.onshow) {\n              eForm.$onshow = angular.bind(eForm, $parse(attrs.onshow), scope);\n            }\n\n            /**\n             * Called when form hides after both save or cancel.\n             * \n             * @var {method|attribute} onhide \n             * @memberOf editable-form\n             */\n            if(attrs.onhide) {\n              eForm.$onhide = angular.bind(eForm, $parse(attrs.onhide), scope);\n            }\n\n            /**\n             * Called when form is cancelled.\n             * \n             * @var {method|attribute} oncancel\n             * @memberOf editable-form\n             */\n            if(attrs.oncancel) {\n              eForm.$oncancel = angular.bind(eForm, $parse(attrs.oncancel), scope);\n            }\n\n            /**\n             * Whether form initially rendered in shown state.\n             *\n             * @var {bool|attribute} shown\n             * @memberOf editable-form\n             */\n            if(attrs.shown && $parse(attrs.shown)(scope)) {\n              eForm.$show();\n            }\n\n            /**\n             * Action when form losses focus. Values: `cancel|submit|ignore`.\n             * Default is `ignore`.\n             * \n             * @var {string|attribute} blur\n             * @memberOf editable-form\n             */\n            eForm._blur = attrs.blur || editableOptions.blurForm;\n\n            // onbeforesave, onaftersave\n            if(!attrs.ngSubmit && !attrs.submit) {\n              /**\n               * Called after all children `onbeforesave` callbacks but before saving form values\n               * to model.  \n               * If at least one children callback returns `non-string` - it will not not be called.  \n               * See [editable-form demo](#editable-form) for details.\n               * \n               * @var {method|attribute} onbeforesave\n               * @memberOf editable-form\n               * \n               */\n              if(attrs.onbeforesave) {\n                eForm.$onbeforesave = function() {\n                  return $parse(attrs.onbeforesave)(scope, {$data: eForm.$data});\n                };\n              }\n\n              /**\n               * Called when form values are saved to model.  \n               * See [editable-form demo](#editable-form) for details.\n               * \n               * @var {method|attribute} onaftersave \n               * @memberOf editable-form\n               * \n               */\n              if(attrs.onaftersave) {\n                eForm.$onaftersave = function() {\n                  return $parse(attrs.onaftersave)(scope, {$data: eForm.$data});\n                };\n              }\n\n              elem.bind('submit', function(event) {\n                event.preventDefault();\n                scope.$apply(function() {\n                  eForm.$submit();\n                });\n              });\n            }\n\n\n            // click - mark form as clicked to exclude in document click handler\n            elem.bind('click', function(e) {\n              // ignore right/middle button click\n              if (e.which && e.which !== 1) {\n                return;\n              }\n\n              if (eForm.$visible) {\n                eForm._clicked = true;\n              }\n            });   \n\n          }\n        };\n      }\n    };\n}]);\n/**\n * editablePromiseCollection\n *  \n * Collect results of function calls. Shows waiting if there are promises. \n * Finally, applies callbacks if:\n * - onTrue(): all results are true and all promises resolved to true\n * - onFalse(): at least one result is false or promise resolved to false\n * - onString(): at least one result is string or promise rejected or promise resolved to string\n */\n\nangular.module('xeditable').factory('editablePromiseCollection', ['$q', function($q) { \n\n  function promiseCollection() {\n    return {\n      promises: [],\n      hasFalse: false,\n      hasString: false,\n      when: function(result, noPromise) {\n        if (result === false) {\n          this.hasFalse = true;\n        } else if (!noPromise && angular.isObject(result)) {\n          this.promises.push($q.when(result));\n        } else if (angular.isString(result)){\n          this.hasString = true;\n        } else { //result === true || result === undefined || result === null\n          return;\n        }\n      },\n      //callbacks: onTrue, onFalse, onString\n      then: function(callbacks) {\n        callbacks = callbacks || {};\n        var onTrue = callbacks.onTrue || angular.noop;\n        var onFalse = callbacks.onFalse || angular.noop;\n        var onString = callbacks.onString || angular.noop;\n        var onWait = callbacks.onWait || angular.noop;\n\n        var self = this;\n\n        if (this.promises.length) {\n          onWait(true);\n          $q.all(this.promises).then(\n            //all resolved       \n            function(results) {\n              onWait(false);\n              //check all results via same `when` method (without checking promises)\n              angular.forEach(results, function(result) {\n                self.when(result, true);  \n              });\n              applyCallback();\n            },\n            //some rejected\n            function(error) { \n              onWait(false);\n              onString();\n            }\n            );\n        } else {\n          applyCallback();\n        }\n\n        function applyCallback() {\n          if (!self.hasString && !self.hasFalse) {\n            onTrue();\n          } else if (!self.hasString && self.hasFalse) {\n            onFalse();\n          } else {\n            onString();\n          }\n        }\n\n      }\n    };\n  }\n\n  return promiseCollection;\n\n}]);\n\n/**\n * editableUtils\n */\n angular.module('xeditable').factory('editableUtils', [function() {\n  return {\n    indexOf: function (array, obj) {\n      if (array.indexOf) return array.indexOf(obj);\n\n      for ( var i = 0; i < array.length; i++) {\n        if (obj === array[i]) return i;\n      }\n      return -1;\n    },\n\n    arrayRemove: function (array, value) {\n      var index = this.indexOf(array, value);\n      if (index >= 0) {\n        array.splice(index, 1);\n      }\n      return value;\n    },\n\n    // copy from https://github.com/angular/angular.js/blob/master/src/Angular.js\n    camelToDash: function(str) {\n      var SNAKE_CASE_REGEXP = /[A-Z]/g;\n      return str.replace(SNAKE_CASE_REGEXP, function(letter, pos) {\n        return (pos ? '-' : '') + letter.toLowerCase();\n      });\n    },\n\n    dashToCamel: function(str) {\n      var SPECIAL_CHARS_REGEXP = /([\\:\\-\\_]+(.))/g;\n      var MOZ_HACK_REGEXP = /^moz([A-Z])/;\n      return str.\n      replace(SPECIAL_CHARS_REGEXP, function(_, separator, letter, offset) {\n        return offset ? letter.toUpperCase() : letter;\n      }).\n      replace(MOZ_HACK_REGEXP, 'Moz$1');\n    },\n\n    rename: function (tag, el) {\n      if (el[0] && el[0].attributes) {\n        var newEl = angular.element('<' + tag + '/>');\n        newEl.html(el.html());\n        var attrs = el[0].attributes;\n        for (var i = 0; i < attrs.length; ++i) {\n            newEl.attr(attrs.item(i).nodeName, attrs.item(i).value);\n        }\n        return newEl;\n      }\n    }\n  };\n}]);\n\n/**\n * editableNgOptionsParser\n *\n * see: https://github.com/angular/angular.js/blob/master/src/ng/directive/select.js#L131\n */\n angular.module('xeditable').factory('editableNgOptionsParser', [function() {\n  //0000111110000000000022220000000000000000000000333300000000000000444444444444444000000000555555555555555000000066666666666666600000000000000007777000000000000000000088888\n  var NG_OPTIONS_REGEXP = /^\\s*(.*?)(?:\\s+as\\s+(.*?))?(?:\\s+group\\s+by\\s+(.*))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(.*?)(?:\\s+track\\s+by\\s+(.*?))?$/;\n\n  function parser(optionsExp) {\n    var match;\n\n    if (! (match = optionsExp.match(NG_OPTIONS_REGEXP))) {\n      throw 'ng-options parse error';\n    }\n\n    var \n    displayFn = match[2] || match[1],\n    valueName = match[4] || match[6],\n    keyName = match[5],\n    groupByFn = match[3] || '',\n    valueFn = match[2] ? match[1] : valueName,\n    valuesFn = match[7],\n    track = match[8],\n    trackFn = track ? match[8] : null;\n\n    var ngRepeat;\n    if (keyName === undefined) { // array\n      ngRepeat = valueName + ' in ' + valuesFn;\n      if (track !== undefined) {\n        ngRepeat += ' track by '+trackFn;\n      }\n    } else { // object\n      ngRepeat = '('+keyName+', '+valueName+') in '+valuesFn;\n    }\n    \n    // group not supported yet\n    return {\n      ngRepeat: ngRepeat,\n      locals: {\n        valueName: valueName,\n        keyName: keyName,\n        valueFn: valueFn,\n        displayFn: displayFn\n      }\n    };\n  }\n\n  return parser;\n}]);\n\n/**\n * editableCombodate\n *\n * angular version of https://github.com/vitalets/combodate\n */\nangular.module('xeditable').factory('editableCombodate', [function() {\n  function Combodate(element, options) {\n    this.$element = angular.element(element);\n\n    if(this.$element[0].nodeName != 'INPUT') {\n      throw 'Combodate should be applied to INPUT element';\n    }\n\n    var currentYear = new Date().getFullYear();\n    this.defaults = {\n      //in this format value stored in original input\n      format: 'YYYY-MM-DD HH:mm',\n      //in this format items in dropdowns are displayed\n      template: 'D / MMM / YYYY   H : mm',\n      //initial value, can be `new Date()`\n      value: null,\n      minYear: 1970,\n      maxYear: currentYear,\n      yearDescending: true,\n      minuteStep: 5,\n      secondStep: 1,\n      firstItem: 'empty', //'name', 'empty', 'none'\n      errorClass: null,\n      customClass: '',\n      roundTime: true, // whether to round minutes and seconds if step > 1\n      smartDays: true // whether days in combo depend on selected month: 31, 30, 28\n    };\n\n    this.options = angular.extend({}, this.defaults, options);\n    this.init();\n  }\n\n  Combodate.prototype = {\n    constructor: Combodate,\n    init: function () {\n      this.map = {\n        //key   regexp    moment.method\n        day:    ['D',    'date'], \n        month:  ['M',    'month'], \n        year:   ['Y',    'year'], \n        hour:   ['[Hh]', 'hours'],\n        minute: ['m',    'minutes'], \n        second: ['s',    'seconds'],\n        ampm:   ['[Aa]', ''] \n      };\n      \n      this.$widget = angular.element('<span class=\"combodate\"></span>').html(this.getTemplate());\n      \n      this.initCombos();\n      \n      if (this.options.smartDays) {\n        var combo = this;\n        this.$widget.find('select').bind('change', function(e) {\n          // update days count if month or year changes\n          if (angular.element(e.target).hasClass('month') || angular.element(e.target).hasClass('year')) {\n            combo.fillCombo('day');\n          }\n        });        \n      }\n\n      this.$widget.find('select').css('width', 'auto');\n\n      // hide original input and insert widget                                       \n      this.$element.css('display', 'none').after(this.$widget);\n      \n      // set initial value\n      this.setValue(this.$element.val() || this.options.value);\n    },\n    \n    /*\n     Replace tokens in template with <select> elements \n     */         \n     getTemplate: function() {\n      var tpl = this.options.template;\n      var customClass = this.options.customClass;\n\n      //first pass\n      angular.forEach(this.map, function(v, k) {\n        v = v[0]; \n        var r = new RegExp(v+'+');\n        var token = v.length > 1 ? v.substring(1, 2) : v;\n        \n        tpl = tpl.replace(r, '{'+token+'}');\n      });\n\n      //replace spaces with &nbsp;\n      tpl = tpl.replace(/ /g, '&nbsp;');\n\n      //second pass\n      angular.forEach(this.map, function(v, k) {\n        v = v[0];\n        var token = v.length > 1 ? v.substring(1, 2) : v;\n\n        tpl = tpl.replace('{'+token+'}', '<select class=\"'+k+' '+customClass+'\"></select>');\n      });   \n\n      return tpl;\n    },\n    \n    /*\n     Initialize combos that presents in template \n     */        \n     initCombos: function() {\n      for (var k in this.map) {\n        var c = this.$widget[0].querySelectorAll('.'+k);\n        // set properties like this.$day, this.$month etc.\n        this['$'+k] = c.length ? angular.element(c) : null;\n        // fill with items\n        this.fillCombo(k);\n      }\n    },\n\n    /*\n     Fill combo with items \n     */        \n     fillCombo: function(k) {\n      var $combo = this['$'+k];\n      if (!$combo) {\n        return;\n      }\n\n      // define method name to fill items, e.g `fillDays`\n      var f = 'fill' + k.charAt(0).toUpperCase() + k.slice(1); \n      var items = this[f]();\n      var value = $combo.val();\n\n      $combo.html('');\n      for(var i=0; i<items.length; i++) {\n        $combo.append('<option value=\"'+items[i][0]+'\">'+items[i][1]+'</option>');\n      }\n\n      $combo.val(value);\n    },\n\n    /*\n     Initialize items of combos. Handles `firstItem` option \n     */\n     fillCommon: function(key) {\n      var values = [], relTime;\n\n      if(this.options.firstItem === 'name') {\n        //need both to support moment ver < 2 and  >= 2\n        relTime = moment.relativeTime || moment.langData()._relativeTime; \n        var header = typeof relTime[key] === 'function' ? relTime[key](1, true, key, false) : relTime[key];\n        //take last entry (see momentjs lang files structure) \n        header = header.split(' ').reverse()[0];                \n        values.push(['', header]);\n      } else if(this.options.firstItem === 'empty') {\n        values.push(['', '']);\n      }\n      return values;\n    },  \n\n\n    /*\n    fill day\n    */\n    fillDay: function() {\n      var items = this.fillCommon('d'), name, i,\n      twoDigit = this.options.template.indexOf('DD') !== -1,\n      daysCount = 31;\n\n      // detect days count (depends on month and year)\n      // originally https://github.com/vitalets/combodate/pull/7\n      if (this.options.smartDays && this.$month && this.$year) {\n        var month = parseInt(this.$month.val(), 10);\n        var year = parseInt(this.$year.val(), 10);\n\n        if (!isNaN(month) && !isNaN(year)) {\n          daysCount = moment([year, month]).daysInMonth();\n        }\n      }\n\n      for (i = 1; i <= daysCount; i++) {\n        name = twoDigit ? this.leadZero(i) : i;\n        items.push([i, name]);\n      }\n      return items;\n    },\n    \n    /*\n    fill month\n    */\n    fillMonth: function() {\n      var items = this.fillCommon('M'), name, i, \n      longNames = this.options.template.indexOf('MMMM') !== -1,\n      shortNames = this.options.template.indexOf('MMM') !== -1,\n      twoDigit = this.options.template.indexOf('MM') !== -1;\n\n      for(i=0; i<=11; i++) {\n        if(longNames) {\n          //see https://github.com/timrwood/momentjs.com/pull/36\n          name = moment().date(1).month(i).format('MMMM');\n        } else if(shortNames) {\n          name = moment().date(1).month(i).format('MMM');\n        } else if(twoDigit) {\n          name = this.leadZero(i+1);\n        } else {\n          name = i+1;\n        }\n        items.push([i, name]);\n      } \n      return items;\n    },\n    \n    /*\n    fill year\n    */\n    fillYear: function() {\n      var items = [], name, i, \n      longNames = this.options.template.indexOf('YYYY') !== -1;\n\n      for(i=this.options.maxYear; i>=this.options.minYear; i--) {\n        name = longNames ? i : (i+'').substring(2);\n        items[this.options.yearDescending ? 'push' : 'unshift']([i, name]);\n      }\n      \n      items = this.fillCommon('y').concat(items);\n      \n      return items;\n    },\n    \n    /*\n    fill hour\n    */\n    fillHour: function() {\n      var items = this.fillCommon('h'), name, i,\n      h12 = this.options.template.indexOf('h') !== -1,\n      h24 = this.options.template.indexOf('H') !== -1,\n      twoDigit = this.options.template.toLowerCase().indexOf('hh') !== -1,\n      min = h12 ? 1 : 0, \n      max = h12 ? 12 : 23;\n\n      for(i=min; i<=max; i++) {\n        name = twoDigit ? this.leadZero(i) : i;\n        items.push([i, name]);\n      } \n      return items;\n    },\n\n    /*\n    fill minute\n    */\n    fillMinute: function() {\n      var items = this.fillCommon('m'), name, i,\n      twoDigit = this.options.template.indexOf('mm') !== -1;\n\n      for(i=0; i<=59; i+= this.options.minuteStep) {\n        name = twoDigit ? this.leadZero(i) : i;\n        items.push([i, name]);\n      }\n      return items;\n    },\n    \n    /*\n    fill second\n    */\n    fillSecond: function() {\n      var items = this.fillCommon('s'), name, i,\n      twoDigit = this.options.template.indexOf('ss') !== -1;\n\n      for(i=0; i<=59; i+= this.options.secondStep) {\n        name = twoDigit ? this.leadZero(i) : i;\n        items.push([i, name]);\n      }    \n      return items;\n    },\n    \n    /*\n    fill ampm\n    */\n    fillAmpm: function() {\n      var ampmL = this.options.template.indexOf('a') !== -1,\n      ampmU = this.options.template.indexOf('A') !== -1,            \n      items = [\n      ['am', ampmL ? 'am' : 'AM'],\n      ['pm', ampmL ? 'pm' : 'PM']\n      ];\n      return items;\n    },\n\n    /*\n     Returns current date value from combos. \n     If format not specified - `options.format` used.\n     If format = `null` - Moment object returned.\n     */\n     getValue: function(format) {\n      var dt, values = {}, \n      that = this,\n      notSelected = false;\n\n      //getting selected values    \n      angular.forEach(this.map, function(v, k) {\n        if(k === 'ampm') {\n          return;\n        }\n        var def = k === 'day' ? 1 : 0;\n\n        values[k] = that['$'+k] ? parseInt(that['$'+k].val(), 10) : def; \n        \n        if(isNaN(values[k])) {\n         notSelected = true;\n         return false; \n       }\n     });\n      \n      //if at least one visible combo not selected - return empty string\n      if(notSelected) {\n       return '';\n     }\n\n      //convert hours 12h --> 24h \n      if(this.$ampm) {\n        //12:00 pm --> 12:00 (24-h format, midday), 12:00 am --> 00:00 (24-h format, midnight, start of day)\n        if(values.hour === 12) {\n          values.hour = this.$ampm.val() === 'am' ? 0 : 12;                    \n        } else {\n          values.hour = this.$ampm.val() === 'am' ? values.hour : values.hour+12;\n        }\n      }\n      \n      dt = moment([values.year, values.month, values.day, values.hour, values.minute, values.second]);\n      \n      //highlight invalid date\n      this.highlight(dt);\n\n      format = format === undefined ? this.options.format : format;\n      if(format === null) {\n       return dt.isValid() ? dt : null; \n     } else {\n       return dt.isValid() ? dt.format(format) : ''; \n     }\n   },\n\n   setValue: function(value) {\n    if(!value) {\n      return;\n    }\n\n      // parse in strict mode (third param `true`)\n      var dt = typeof value === 'string' ? moment(value, this.options.format, true) : moment(value),\n      that = this,\n      values = {};\n      \n      //function to find nearest value in select options\n      function getNearest($select, value) {\n        var delta = {};\n        angular.forEach($select.children('option'), function(opt, i){\n          var optValue = angular.element(opt).attr('value');\n\n          if(optValue === '') return;\n          var distance = Math.abs(optValue - value); \n          if(typeof delta.distance === 'undefined' || distance < delta.distance) {\n            delta = {value: optValue, distance: distance};\n          } \n        }); \n        return delta.value;\n      }\n      \n      if(dt.isValid()) {\n        //read values from date object\n        angular.forEach(this.map, function(v, k) {\n          if(k === 'ampm') {\n            return; \n          }\n          values[k] = dt[v[1]]();\n        });\n\n        if(this.$ampm) {\n          //12:00 pm --> 12:00 (24-h format, midday), 12:00 am --> 00:00 (24-h format, midnight, start of day)\n          if(values.hour >= 12) {\n            values.ampm = 'pm';\n            if(values.hour > 12) {\n              values.hour -= 12;\n            }\n          } else {\n            values.ampm = 'am';\n            if(values.hour === 0) {\n              values.hour = 12;\n            }\n          }\n        }\n\n        angular.forEach(values, function(v, k) {\n          //call val() for each existing combo, e.g. this.$hour.val()\n          if(that['$'+k]) {\n\n            if(k === 'minute' && that.options.minuteStep > 1 && that.options.roundTime) {\n             v = getNearest(that['$'+k], v);\n           }\n           \n           if(k === 'second' && that.options.secondStep > 1 && that.options.roundTime) {\n             v = getNearest(that['$'+k], v);\n           }                       \n           \n           that['$'+k].val(v);\n         }\n       });\n\n        // update days count\n        if (this.options.smartDays) {\n          this.fillCombo('day');\n        }\n\n        this.$element.val(dt.format(this.options.format)).triggerHandler('change');\n      }\n    },\n    \n    /*\n     highlight combos if date is invalid\n     */\n     highlight: function(dt) {\n      if(!dt.isValid()) {\n        if(this.options.errorClass) {\n          this.$widget.addClass(this.options.errorClass);\n        } else {\n          //store original border color\n          if(!this.borderColor) {\n            this.borderColor = this.$widget.find('select').css('border-color'); \n          }\n          this.$widget.find('select').css('border-color', 'red');\n        }\n      } else {\n        if(this.options.errorClass) {\n          this.$widget.removeClass(this.options.errorClass);\n        } else {\n          this.$widget.find('select').css('border-color', this.borderColor);\n        }  \n      }\n    },\n    \n    leadZero: function(v) {\n      return v <= 9 ? '0' + v : v; \n    },\n    \n    destroy: function() {\n      this.$widget.remove();\n      this.$element.removeData('combodate').show();\n    }\n\n  };\n\n  return {\n    getInstance: function(element, options) {\n      return new Combodate(element, options);\n    }\n  };\n}]);\n\n/*\nEditable icons:\n- default\n- font-awesome\n\n*/\nangular.module('xeditable').factory('editableIcons', function() {\n\n  var icons = {\n    //Icon-set to use, defaults to bootstrap icons\n    default: {\n      'bs2': {\n        ok: 'icon-ok icon-white',\n        cancel: 'icon-remove',\n        clear: 'icon-trash'\n      },\n      'bs3': {\n        ok: 'glyphicon glyphicon-ok',\n        cancel: 'glyphicon glyphicon-remove',\n        clear: 'glyphicon glyphicon-trash'\n      }\n    },\n    external: {\n      'font-awesome': {\n        ok: 'fa fa-check',\n        cancel: 'fa fa-times',\n        clear: 'fa fa-trash'\n      }\n    }\n  };\n\n  return icons;\n});\n\n/* jshint -W086 */\n/*\nEditable themes:\n- default\n- bootstrap 2\n- bootstrap 3\n- semantic-ui\n\nNote: in postrender() `this` is instance of editableController\n*/\nangular.module('xeditable').factory('editableThemes', function() {\n  var themes = {\n    //default\n    'default': {\n      formTpl:      '<form class=\"editable-wrap\"></form>',\n      noformTpl:    '<span class=\"editable-wrap\"></span>',\n      controlsTpl:  '<span class=\"editable-controls\"></span>',\n      inputTpl:     '',\n      errorTpl:     '<div class=\"editable-error\" data-ng-if=\"$error\" data-ng-bind=\"$error\"></div>',\n      buttonsTpl:   '<span class=\"editable-buttons\"></span>',\n      submitTpl:    '<button type=\"submit\">save</button>',\n      cancelTpl:    '<button type=\"button\" ng-click=\"$form.$cancel()\">cancel</button>',\n      resetTpl:    '<button type=\"reset\">clear</button>'\n    },\n\n    //bs2\n    'bs2': {\n      formTpl:     '<form class=\"form-inline editable-wrap\" role=\"form\"></form>',\n      noformTpl:   '<span class=\"editable-wrap\"></span>',\n      controlsTpl: '<div class=\"editable-controls controls control-group\" ng-class=\"{\\'error\\': $error}\"></div>',\n      inputTpl:    '',\n      errorTpl:    '<div class=\"editable-error help-block\" data-ng-if=\"$error\" data-ng-bind=\"$error\"></div>',\n      buttonsTpl:  '<span class=\"editable-buttons\"></span>',\n      submitTpl:   '<button type=\"submit\" class=\"btn btn-primary\"><span></span></button>',\n      cancelTpl:   '<button type=\"button\" class=\"btn\" ng-click=\"$form.$cancel()\">'+\n                      '<span></span>'+\n                   '</button>',\n      resetTpl:    '<button type=\"reset\" class=\"btn btn-danger\">clear</button>'\n\n    },\n\n    //bs3\n    'bs3': {\n      formTpl:     '<form class=\"form-inline editable-wrap\" role=\"form\"></form>',\n      noformTpl:   '<span class=\"editable-wrap\"></span>',\n      controlsTpl: '<div class=\"editable-controls form-group\" ng-class=\"{\\'has-error\\': $error}\"></div>',\n      inputTpl:    '',\n      errorTpl:    '<div class=\"editable-error help-block\" data-ng-if=\"$error\" data-ng-bind=\"$error\"></div>',\n      buttonsTpl:  '<span class=\"editable-buttons\"></span>',\n      submitTpl:   '<button type=\"submit\" class=\"btn btn-primary\"><span></span></button>',\n      cancelTpl:   '<button type=\"button\" class=\"btn btn-default\" ng-click=\"$form.$cancel()\">'+\n                     '<span></span>'+\n                   '</button>',\n      resetTpl:    '<button type=\"reset\" class=\"btn btn-danger\">clear</button>',\n\n      //bs3 specific prop to change buttons class: btn-sm, btn-lg\n      buttonsClass: '',\n      //bs3 specific prop to change standard inputs class: input-sm, input-lg\n      inputClass: '',\n      postrender: function() {\n        //apply `form-control` class to std inputs\n        switch(this.directiveName) {\n          case 'editableText':\n          case 'editableSelect':\n          case 'editableTextarea':\n          case 'editableEmail':\n          case 'editableTel':\n          case 'editableNumber':\n          case 'editableUrl':\n          case 'editableSearch':\n          case 'editableDate':\n          case 'editableDatetime':\n          case 'editableBsdate':\n          case 'editableTime':\n          case 'editableMonth':\n          case 'editableWeek':\n          case 'editablePassword':\n          case 'editableDatetimeLocal':\n            this.inputEl.addClass('form-control');\n            if(this.theme.inputClass) {\n              // don`t apply `input-sm` and `input-lg` to select multiple\n              // should be fixed in bs itself!\n              if(this.inputEl.attr('multiple') &&\n                (this.theme.inputClass === 'input-sm' || this.theme.inputClass === 'input-lg')) {\n                  break;\n              }\n              this.inputEl.addClass(this.theme.inputClass);\n            }\n          break;\n          case 'editableCheckbox':\n              this.editorEl.addClass('checkbox');\n        }\n\n        //apply buttonsClass (bs3 specific!)\n        if(this.buttonsEl && this.theme.buttonsClass) {\n          this.buttonsEl.find('button').addClass(this.theme.buttonsClass);\n        }\n      }\n    },\n    \n    //semantic-ui\n    'semantic': {\n      formTpl:     '<form class=\"editable-wrap ui form\" ng-class=\"{\\'error\\': $error}\" role=\"form\"></form>',\n      noformTpl:   '<span class=\"editable-wrap\"></span>',\n      controlsTpl: '<div class=\"editable-controls ui fluid input\" ng-class=\"{\\'error\\': $error}\"></div>',\n      inputTpl:    '',\n      errorTpl:    '<div class=\"editable-error ui error message\" data-ng-if=\"$error\" data-ng-bind=\"$error\"></div>',\n      buttonsTpl:  '<span class=\"mini ui buttons\"></span>',\n      submitTpl:   '<button type=\"submit\" class=\"ui primary button\"><i class=\"ui check icon\"></i></button>',\n      cancelTpl:   '<button type=\"button\" class=\"ui button\" ng-click=\"$form.$cancel()\">'+\n                      '<i class=\"ui cancel icon\"></i>'+\n                   '</button>',\n      resetTpl:    '<button type=\"reset\" class=\"ui button\">clear</button>'\n    }\n  };\n\n  return themes;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-xeditable/dist/js/xeditable.js\n// module id = 322\n// module chunks = 0","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-xeditable/dist/css/xeditable.css\n// module id = 323\n// module chunks = 0","import TodoApp from 'angularApp/app.module';\nimport states from 'angularApp/common/states.const';\nimport 'angularApp/common/filters/pages.filter';\n\nimport 'angularApp/common/services/storage.service';\nimport 'angularApp/common/services/dataSource.service';\nimport 'angularApp/common/services/article.resource.js';\n\nangular.module(TodoApp)\n\n    .config(($stateProvider, $urlRouterProvider) => {\n\n        $stateProvider\n\n            .state(states.LOGIN, {\n                url: '/login',\n                template: '<login />',\n            })\n\n            .state(states.APP, {\n                abstract: true,\n                url: '/app',\n                template: require('./main.html'),\n                resolve: {\n                    user: DataSourceService => DataSourceService.checkLogin()\n                }\n            })\n\n            .state(states.ARTICLES, {\n                url: '/app/articles',\n                template: '<articles-list />',\n            })\n\n            .state(states.ARTICLE_EDIT, {\n                url: '/app/articles/:id',\n                template: '<article-form data=\"$resolve.article\" />',\n                resolve: {\n                    article: ($stateParams, Article) => {\n                        return Article.load({}, {_id: $stateParams.id}).$promise;\n                    }\n                }\n            })\n\n            .state(states.ARTICLE_ADD, {\n                url: '/app/addArticle',\n                template: '<article-form data=\"null\" />'\n            })\n\n        ;\n\n        $urlRouterProvider.otherwise('/login');\n\n    })\n\n    .run(($log, $rootScope, $state) => {\n        $rootScope.$on('$stateChangeError', (event, toState, toParams, fromState, fromParams, error) => {\n\n            if (toState.name !== states.LOGIN && _.includes([403, 401], error.status)) {\n                event.preventDefault();\n                $state.go(states.LOGIN);\n            }\n\n        });\n\n    })\n\n;\n\n// manual bootstrap\nangular.element(() => {\n    angular.bootstrap(document.getElementById('angularRoot'), [TodoApp]);\n});\n\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/js/angular/app/index.js","import login from 'angularApp/login/login.component';\nimport articlesList from 'angularApp/articles/articles.component';\nimport articleForm from 'angularApp/article/article.component';\nimport AppStates from 'angularApp/common/states.const';\nimport pagination from 'angularApp/common/components/pagination.component';\n\n\nconst APP = angular.module('todoApp', [\n    'ngMessages',\n    'ngResource',\n    'ui.router',\n    'mgcrea.ngStrap'\n]);\n\nAPP\n\n    .constant('states', AppStates)\n\n    .component('pagination', pagination)\n    .component('login', login)\n    .component('articlesList', articlesList)\n    .component('articleForm', articleForm)\n\n;\n\nexport default APP.name;\n\n\n// WEBPACK FOOTER //\n// ./frontend/js/angular/app/app.module.js","import states from 'angularApp/common/states.const';\n\nclass LoginController {\n\n    constructor($state, DataSourceService) {\n        this.ready = false;\n        this.auth = {\n            login: '',\n            pass: ''\n        };\n        this.user = null;\n        this.DataSourceService = DataSourceService;\n        this.$state = $state;\n\n        this.DataSourceService.checkLogin()\n            .then(this.loginSuccess.bind(this))\n            .catch(error => {\n                this.ready = true;\n            });\n    }\n\n    doLogin() {\n        this.DataSourceService.doLogin(this.auth.login, this.auth.pass)\n            .then(this.loginSuccess.bind(this))\n            .catch(this.loginFailed.bind(this));\n    }\n\n    loginSuccess(user) {\n        this.user = user;\n        this.$state.go(states.ARTICLES);\n    }\n\n    loginFailed(error) {\n        console.error('Wrong login: ', error);\n        //show alert\n    }\n\n}\n\nexport default {\n    controller: LoginController,\n    template: require('./login.html')\n};\n\n\n// WEBPACK FOOTER //\n// ./frontend/js/angular/app/login/login.component.js","const AppStates = {\n    LOGIN: 'login',\n\n    APP: 'app',\n    ARTICLES: 'app.articles',\n    ARTICLE_EDIT: 'app.articleEdit',\n    ARTICLE_ADD: 'app.articleAdd'\n};\n\nexport default AppStates;\n\n\n// WEBPACK FOOTER //\n// ./frontend/js/angular/app/common/states.const.js","module.exports = \"<div class=\\\"row\\\" style=\\\"padding-top: 60px;\\\" ng-show=\\\"$ctrl.ready\\\">\\n    <div class=\\\"col-md-4 col-md-offset-4\\\">\\n        <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <h3 class=\\\"panel-title\\\">Please sign in</h3>\\n            </div>\\n            <div class=\\\"panel-body\\\">\\n                <form accept-charset=\\\"UTF-8\\\" role=\\\"form\\\" ng-submit=\\\"$ctrl.doLogin()\\\">\\n\\n                    <fieldset>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <input class=\\\"form-control\\\"\\n                                   placeholder=\\\"Login\\\"\\n                                   name=\\\"login\\\"\\n                                   type=\\\"text\\\"\\n                                   ng-model=\\\"$ctrl.auth.login\\\"\\n                                   required\\n                            >\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <input class=\\\"form-control\\\"\\n                                   placeholder=\\\"Password\\\"\\n                                   name=\\\"password\\\"\\n                                   type=\\\"password\\\"\\n                                   value=\\\"\\\"\\n                                   ng-model=\\\"$ctrl.auth.pass\\\"\\n                                   required\\n                            >\\n                        </div>\\n\\n                        <input class=\\\"btn btn-lg btn-success btn-block\\\" type=\\\"submit\\\" value=\\\"Login\\\">\\n\\n                    </fieldset>\\n\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/js/angular/app/login/login.html\n// module id = 335\n// module chunks = 0","class ArticlesController {\n\n    constructor(Article) {\n        this.Article = Article;\n        this.articles = [];\n        this.itemsPerPage = 3;\n        this.currentPage = 0;\n    }\n\n    $onInit() {\n        this.loadList();\n    }\n\n    loadList() {\n        //this.currentPage = 0;\n        this.Article.query()\n            .$promise\n            .then(articles => {\n                this.articles = articles;\n            });\n    }\n\n}\nexport default {\n    controller: ArticlesController,\n    template: require('./index.html')\n};\n\n\n// WEBPACK FOOTER //\n// ./frontend/js/angular/app/articles/articles.component.js","module.exports = \"<div class=\\\"row\\\" style=\\\"padding-top: 60px;\\\">\\n\\n    <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <span class=\\\"pull-left\\\">Articles</span>\\n            <a class=\\\"btn btn-default btn-sm pull-right\\\" ui-sref=\\\"app.articleAdd\\\">\\n                <span class=\\\"glyphicon glyphicon-plus\\\"></span> Add\\n            </a>\\n            <div class=\\\"clearfix\\\"></div>\\n        </div>\\n\\n        <table class=\\\"table table-bordered table-striped\\\">\\n            <thead>\\n            <th>ID</th>\\n            <th>Title</th>\\n            <th>Description</th>\\n            <th>Author</th>\\n            <th>Source</th>\\n            <th>&nbsp;</th>\\n            </thead>\\n            <tbody>\\n            <tr ng-repeat=\\\"article in $ctrl.articles | limitTo : $ctrl.itemsPerPage : $ctrl.itemsPerPage * $ctrl.currentPage\\\">\\n                <td>{{article._id}}</td>\\n                <td>\\n                    {{article.title || 'Empty'}}\\n                </td>\\n                <td>{{article.description}}</td>\\n                <td>\\n                    {{article.author || 'N/A'}}\\n                </td>\\n                <td>{{article.source.name}}</td>\\n                <td style=\\\"white-space: nowrap;\\\">\\n                    <a class=\\\"btn btn-default btn-sm\\\" ui-sref=\\\"app.articleEdit({id: article._id})\\\">\\n                        <span class=\\\"glyphicon glyphicon-edit\\\"></span>\\n                    </a>\\n                    <a class=\\\"btn btn-danger btn-sm\\\" ng-click=\\\"$ctrl.remove(article)\\\">\\n                        <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n                    </a>\\n                </td>\\n            </tr>\\n            </tbody>\\n        </table>\\n\\n        <div class=\\\"panel-footer\\\">\\n            <pagination total-count=\\\"$ctrl.articles.length\\\"\\n                        items-per-page=\\\"$ctrl.itemsPerPage\\\"\\n                        current-page=\\\"$ctrl.currentPage\\\">\\n\\n            </pagination>\\n        </div>\\n\\n    </div>\\n\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/js/angular/app/articles/index.html\n// module id = 337\n// module chunks = 0","import states from 'angularApp/common/states.const';\n\nclass ArticleController {\n\n    constructor($state, Article) {\n        this.$state = $state;\n        this.Article = Article;\n    }\n\n    $postLink() {\n        this.data = this.data || new this.Article({source: {name: 'usa-today'}});\n    }\n\n    save() {\n        if (this.data._id) {\n            this.update();\n        } else {\n            this.create();\n        }\n    }\n\n    update() {\n        this.data.$save(() => {\n            this.$state.go(states.ARTICLES);\n        });\n    }\n\n    create() {\n        this.data.$create(() => {\n            this.$state.go(states.ARTICLES);\n        });\n    }\n\n}\n\nexport default {\n    controller: ArticleController,\n    template: require('./edit.html'),\n    bindings: {\n        data: '<'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./frontend/js/angular/app/article/article.component.js","module.exports = \"<div class=\\\"row\\\" style=\\\"padding-top: 60px;\\\">\\n\\n    <a class=\\\"btn btn-default btn-sm\\\" ui-sref=\\\"app.articles\\\">\\n        <span class=\\\"glyphicon glyphicon-arrow-left\\\"></span> Back to list\\n    </a>\\n\\n    <hr/>\\n\\n    <form role=\\\"form\\\" ng-submit=\\\"$ctrl.save()\\\">\\n\\n        <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-heading\\\">Article {{$ctrl.data._id || 'creation'}}</div>\\n\\n            <div class=\\\"panel-body\\\">\\n\\n                <div class=\\\"form-group\\\">\\n                    <label>Title</label>\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" ng-model=\\\"$ctrl.data.title\\\" required />\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label>Description</label>\\n                    <textarea class=\\\"form-control\\\" rows=\\\"5\\\" ng-model=\\\"$ctrl.data.description\\\" required></textarea>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label>Author</label>\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" ng-model=\\\"$ctrl.data.author\\\"/>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label>Source</label>\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" ng-model=\\\"$ctrl.data.source.name\\\" disabled />\\n                </div>\\n\\n            </div>\\n\\n            <div class=\\\"panel-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n            </div>\\n\\n        </div>\\n\\n    </form>\\n\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/js/angular/app/article/edit.html\n// module id = 339\n// module chunks = 0","class PaginationController {\n\n    constructor() {\n        this.pages = [];\n    }\n\n    $onChanges(changesObj) {\n        if (changesObj.totalCount !== undefined || changesObj.itemsPerPage !== undefined) {\n            this.pages = _.times(Math.ceil(this.totalCount / this.itemsPerPage), index => index + 1);\n        }\n    }\n\n    selectPage(index) {\n        this.currentPage = index;\n    }\n\n    get displayedFrom() {\n        return this.itemsPerPage * this.currentPage + 1;\n    }\n\n    get displayedTo() {\n        return Math.min(this.totalCount, this.itemsPerPage * (this.currentPage + 1));\n    }\n\n}\n\nexport default {\n    bindings: {\n        totalCount: '<',\n        itemsPerPage: '<',\n        currentPage: '='\n    },\n    controller: PaginationController,\n    template: `<div class=\"btn-group\" role=\"group\">\n                <button type=\"button\"\n                        ng-repeat=\"page in $ctrl.pages\"\n                        class=\"btn\"\n                        ng-class=\"{'btn-primary': $ctrl.currentPage === $index, 'btn-default': $ctrl.currentPage !== $index}\"\n                        ng-click=\"$ctrl.selectPage($index)\">{{page}}</button>\n            </div>\n            <span class=\"label label-primary\">{{$ctrl.displayedFrom}} to {{$ctrl.displayedTo}} from {{$ctrl.totalCount}}</span>`\n};\n\n\n// WEBPACK FOOTER //\n// ./frontend/js/angular/app/common/components/pagination.component.js","import TodoApp from \"angularApp/app.module\";\n\nangular.module(TodoApp)\n    .filter('pages', () => (items, itemsPerPage, current) => {\n        console.log(items.length, itemsPerPage, current);\n        return _.times(Math.ceil(items.length/itemsPerPage), (index) => ({\n            label: index + 1,\n            active: current === index\n        }));\n    });\n\n\n// WEBPACK FOOTER //\n// ./frontend/js/angular/app/common/filters/pages.filter.js","import TodoApp from 'angularApp/app.module';\n\nexport const KEY_LOGGED_IN = 'TODO_APP.KEY_LOGGED_IN';\nexport const KEY_TODOS = 'TODO_APP.KEY_TODOS';\n\nclass StorageService {\n\n    constructor($q) {\n        this.storage = localStorage;\n        this.$q = $q;\n    }\n\n    setItem(key, value) {\n        this.storage.setItem(key, JSON.stringify(value));\n        return this.$q.resolve(value);\n    }\n\n    getItem(key, defaultValue = null) {\n        let value = this.storage.getItem(key);\n        return this.$q.resolve(\n            (value && JSON.parse(value)) || defaultValue\n        );\n    }\n\n}\n\nangular.module(TodoApp)\n    .service('StorageService', StorageService);\n\n\n// WEBPACK FOOTER //\n// ./frontend/js/angular/app/common/services/storage.service.js","import TodoApp from \"angularApp/app.module\";\nimport DataSource from \"jsRoot/DataSource\";\n\nclass DataSourceService {\n\n    constructor($q) {\n        this.$q = $q;\n    }\n\n    checkLogin() {\n        return this.$q.resolve(DataSource.getInstance().checkLogin());\n    }\n\n    doLogin(login, pass) {\n        return this.$q.resolve(DataSource.getInstance().doLogin(login, pass));\n    }\n    \n    getSources(params) {\n        return this.$q.resolve(DataSource.getInstance().getSources(params));\n    }\n\n    getArticles(sourceId) {\n        return this.$q.resolve(DataSource.getInstance().getArticles(sourceId));\n    }\n\n}\n\nangular.module(TodoApp)\n    .service('DataSourceService', DataSourceService);\n\n\n// WEBPACK FOOTER //\n// ./frontend/js/angular/app/common/services/dataSource.service.js","export default class DataSource {\n\n    static getInstance() {\n        return DataSource.instance || new DataSource();\n    }\n\n    static createSource(data) {\n        return Object.assign(new Source(), data);\n    }\n\n    static createArticle(sourceId, data) {\n        return Object.assign(new Article(), data, {sourceId});\n    }\n\n    static get availableCategories() {\n        return [\n            'business',\n            'entertainment',\n            'gaming',\n            'general',\n            'music',\n            'science-and-nature',\n            'sport',\n            'technology'\n        ];\n    }\n\n    static get availableLanguages() {\n        return ['en', 'de', 'fr'];\n    }\n\n    static get availableCountries() {\n        return ['au', 'de', 'gb', 'in', 'it', 'us'];\n    }\n\n    constructor() {\n\n        if (DataSource.instance) {\n            throw 'DataSource instance already instantiated';\n        }\n\n        DataSource.instance = this;\n\n        const config = require('./config.json');\n\n    }\n\n    getSources(params) {\n        return this.doRequest('/api/articles/sources', 'GET', params);\n    }\n\n    getArticles(sourceId) {\n        return this.doRequest('/api/articles', 'GET', {'source.id': sourceId});\n    }\n\n    getUsers() {\n        return this.doRequest('/api/users', 'GET');\n    }\n\n    addArticle(data) {\n        return this.doRequest('/api/articles', 'POST', {}, data);\n    }\n\n    removeArticle(id) {\n        return this.doRequest(`/api/articles/${id}`, 'DELETE');\n    }\n\n    checkLogin() {\n        return this.doRequest('/api/auth');\n    }\n\n    doLogin(login, pass) {\n        return this.doRequest('/api/auth/login', 'POST', {}, {login, pass});\n    }\n\n    doReg(login, pass) {\n        return this.doRequest('/api/auth/reg', 'POST', {}, {login, pass});\n    }\n\n    doRequest(url, method='GET', queryParams = {}, body = null) {\n\n        if (process.env.NODE_ENV === 'development') {\n            console.log('DataSource doRequest()', method, queryParams);\n        }\n\n        const req = new Request(\n            this.createUrl(url, queryParams),\n            {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                credentials: 'include',\n                method,\n                body: body && JSON.stringify(body)\n            }\n        );\n\n        return fetch(req)\n            .then(response => {\n                if (!response.ok) {\n                    throw 'DataSource error';\n                }\n                return response.json();\n            });\n    }\n\n    createUrl(baseUrl, params = {}) {\n        const queryParts = [];\n        for (var name in params) {\n            if (params[name]) {\n                queryParts.push(`${name}=${params[name]}`);\n            }\n        }\n        const urlSuffix = queryParts.length ? '?'+queryParts.join('&') : '';\n        return `${baseUrl}${urlSuffix}`;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./frontend/js/DataSource.js","module.exports = {\n\t\"newsApi\": {\n\t\t\"apiKey\": \"a90095ec1a4d42d0a97bc23915858b11\"\n\t},\n\t\"mLab\": {\n\t\t\"apiKey\": \"lIo66jGFt2WmdrZEXdbDxFpXbRgGqVJM\"\n\t},\n\t\"testTree\": {\n\t\t\"string\": \"string\",\n\t\t\"array\": [\n\t\t\t{\n\t\t\t\t\"string\": \"string\"\n\t\t\t}\n\t\t]\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/js/config.json\n// module id = 345\n// module chunks = 0 2","import TodoApp from \"angularApp/app.module\";\n\nexport default angular.module(TodoApp)\n    .factory('Article', ($resource) => {\n        return $resource('/api/articles/:id',  {id:'@_id'},\n            {\n                query: {method: 'GET', url: '/api/articles?source.id=usa-today', isArray:true},\n                load: {method: 'GET'},\n                save: {method: 'PUT'},\n                create: {method: 'POST'},\n                delete: {method: 'DELETE'}\n            });\n\n    }).name;\n\n\n// WEBPACK FOOTER //\n// ./frontend/js/angular/app/common/services/article.resource.js","module.exports = \"<div class=\\\"text-center\\\">\\n    <a class=\\\"btn btn-default\\\" href=\\\"/api/auth/logout\\\">\\n        <span class=\\\"glyphicon glyphicon-log-out\\\"></span>\\n        Log out\\n    </a>\\n</div>\\n\\n<ui-view />\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/js/angular/app/main.html\n// module id = 347\n// module chunks = 0"],"sourceRoot":""}